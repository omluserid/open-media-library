<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:a="assembly://Library/Library"
	  xmlns:s="resx://Library/Library.Resources/Styles"
      xmlns:filter="resx://Library/Library.Resources/FilterList"
	  xmlns:cor="assembly://MSCorLib/System"
      xmlns:addin="assembly://Microsoft.MediaCenter/Microsoft.MediaCenter.Hosting"
      xmlns:col="assembly://MSCorLib/System.Collections"
	  xmlns:me="Me">

  <Aggregate Source="resx://Library/Library.Resources/Base" />
  
  <UI Name="Gallery">
  <Properties>
    <a:MovieGallery Name="MovieBrowser" MovieGallery="$Required"/>
    <a:UISettings Name="UISettings" UISettings="$Required" />
    <a:OMLApplication Name="Application" OMLApplication="$Required"/>
    <ScrollingData Name="ScrollingData" ScrollingData="$Required"/>
    <cor:String Name="GalleryView" String="$Required" />
    <col:IList Name="List" IList="$Required"/>
    <EditableText Name="JumpValue"/>

    <!-- An object to track which item in the list currently has focus -->
    <IntRangedValue Name="FocusedIndex"/>
        
</Properties>

  <Locals>
    <GridLayout Name="DefaultGrid" />

    <GridLayout Name="GridLayout" Repeat="WhenTooBig"
                Rows="[UISettings.Gallery.CoverArtRows]"
                Orientation="Vertical"
                AllowWrap="true"
                Spacing="[UISettings.Gallery.CoverArtSpacing]"
                ReferenceSize="[UISettings.Gallery.CoverArtSize]"
                MajorAlignment="Fill"
                MinorAlignment="Center"
                RepeatGap="100"/>

    <GridLayout Name="ListLayout" Repeat="WhenTooBig"
                Rows="[UISettings.Gallery.ListRows]"
                Orientation="Vertical"
                AllowWrap="true"
                ReferenceSize="[UISettings.Gallery.ListItemSize]"
                Spacing="[UISettings.Gallery.ListSpacing]"
                MajorAlignment="Fill"
                MinorAlignment="Fill"
                RepeatGap="100"/>

      <GridLayout Name="CarouselLayout" Repeat="Always"
                  Rows="1"
                  Orientation="Horizontal"
                  AllowWrap="true"
                  Spacing="[UISettings.Gallery.CarouselArtSpacing]"
                  ReferenceSize="[UISettings.Gallery.CarouselArtSize]"
                  MajorAlignment="Fill"
                  MinorAlignment="Fill"
                  RepeatGap="0"/>

      <GridLayout Name="FolderViewLayout" Repeat="WhenTooBig"
                  Rows="[UISettings.Gallery.ListRows]"
                  Orientation="Horizontal"
                  AllowWrap="true"
                  Spacing="[UISettings.Gallery.CoverArtSpacing]"
                  ReferenceSize="[UISettings.Gallery.CoverArtSize]"
                  MajorAlignment="Fill"
                  MinorAlignment="Center"
                  RepeatGap="100"/>

      <!-- Create an input handler for scrolling. -->
    <ScrollingHandler Name="ScrollingHandler" HandlerStage="Bubbled" />
    <TypingHandler Name="TypingHandler" EditableText="[MovieBrowser.JumpInListText]" TypingPolicy="TripleTap" HandlerStage="Bubbled"/>
    <Timer Name="ClearTimer" AutoRepeat="false" Interval="5000" Enabled="false"/>
    <addin:AddInHost Name="AddInHost"/>

  </Locals>

  <Rules>
    <Default Target="[Input.KeyInteractive]" Value="true" />
    <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
    <Default Target="[ScrollingData.Repeater]" Value="[GalleryRepeater]" />

    <Condition Source="[GalleryView]" SourceValue="List" ConditionOp="Equals" >
      <Actions>
        <Set Target="[GalleryRepeater.Layout]" Value="[ListLayout]" />
      </Actions>
    </Condition>

    <Condition Source="[GalleryView]" SourceValue="Cover Art" ConditionOp="Equals" >
      <Actions>
        <Set Target="[GalleryRepeater.Layout]" Value="[GridLayout]" />
      </Actions>
    </Condition>

      <Condition Source="[GalleryView]" SourceValue="Carousel" ConditionOp="Equals">
          <Actions>
              <Set Target="[GalleryRepeater.Layout]" Value="[CarouselLayout]"/>
              <Set Target="[ScrollingHandler.HandlerStage]" Value="Bubbled"/>
              <Set Target="[ScrollingData.LockedPosition]" Value=".5"/>
              <Set Target="[ScrollingData.LockedAlignment]" Value="0"/>
              <Set Target="[GalleryRepeater.Padding]" Value="50,0,0,0"/>
          </Actions>
      </Condition>

      <Condition Source="[GalleryView]" SourceValue="FolderView" ConditionOp="Equals">
          <Actions>
              <Set Target="[GalleryRepeater.Layout]" Value="[FolderViewLayout]" />
          </Actions>
      </Condition>
    <Rule>
      <Conditions>
        <Modified Source="[TypingHandler.DisplayValue]"/>
      </Conditions>
      <Actions>
        <Set Target="[JumpValue.Value]" Value="[TypingHandler.DisplayValue]"/>
        <Invoke Target="[MovieBrowser.JumpToMovie]" jumpString="[TypingHandler.DisplayValue]" list="[List]"/>
        <Invoke Target="[ClearTimer.Start]" />
      </Actions>
    </Rule>

    <Changed Source="[ClearTimer.Tick]">
      <Actions>
        <Set Target="[MovieBrowser.JumpInListText.Value]" Value="" />
          <Set Target="[JumpValue.Value]" Value="" />
      </Actions>
    </Changed>

    <Changed Source="[MovieBrowser.JumpToPosition]" >
      <Actions>
        <!--Scroll parameter is the number of items to scroll to, relative to the current position-->
        <Invoke Target ="[ScrollingData.Scroll]" amount="[MovieBrowser.RelativeJumpToPosition]" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        <!--This is the absolute index-->
        <Invoke Target ="[GalleryRepeater.NavigateIntoIndex]" index="[MovieBrowser.JumpToPosition]" InvokePolicy="Synchronous"/>
        <Invoke Target="[ClearTimer.Start]" />
      </Actions>
    </Changed>

  </Rules>

  <Content>
    <Panel Name="GalleryContainer" Layout="Form"  MouseInteractive="true">

      <Children>

        <!-- Put in a scroller so that if we repeat, the row will scroll. -->
        <Scroller Name="GalleryScroller"
                  Orientation="Horizontal"
                  ScrollingData="[ScrollingData]">
          <Children>

            <!-- Hook up our list to the repeater.  -->
            <Repeater Name="GalleryRepeater"
                      Navigation="FlowVertical"
                      Source="[List]"
                      DiscardOffscreenVisuals="true"
                      Layout="[GridLayout]">
              <Animations>
                <Animation Animation="animation://s:MoveAnimation"/>
                <Animation Type="Move">
                    <Keyframes>
                        <PositionKeyframe Time="0" RelativeTo="Current" />
                        <PositionKeyframe Time=".2" RelativeTo="Final" />
                    </Keyframes>
                </Animation>
              </Animations>
              <Content>

                <!-- For each item, repeat our RepeatedItem UI, passing in-->
                <!-- the index of the item and the image.                 -->
                <me:RepeatedItem  Index="[RepeatedItemIndex]"
                                  List="[List]"
                                  FocusedIndex="[FocusedIndex]"
                                  GalleryItem="[RepeatedItem!a:GalleryItem]"
                                  Application="[Application]"
                                  MovieBrowser="[MovieBrowser]"
                                  GalleryView="[GalleryView]"
                                  CoverArtAlpha="[UISettings.Gallery.CoverArtAlpha]"
                                  UISettings="[UISettings]" />
              </Content>
            </Repeater>

          </Children>
        </Scroller>

      </Children>
    </Panel>
  </Content>

</UI>

<!-- The RepeatedItem UI is what gets repeated for each image in our list -->
<!-- from the ScrollingSample UI.  It displays the image itself, the      -->
<!-- item's index and "Real" indexes, and a background color fill that    -->
<!-- changes color when it receives key focus.                            -->
<UI Name="RepeatedItem">
    <Properties>
        <a:OMLApplication Name="Application" OMLApplication="$Required"/>
        <a:GalleryItem Name="GalleryItem" GalleryItem="$Required"/>
        <a:MovieGallery Name="MovieBrowser" MovieGallery="$Required"/>
        <!-- Update these 2 values everytime we get the focus -->
        <IntRangedValue Name="FocusedIndex" IntRangedValue="$Required"/>
        <cor:Single Name="CoverArtAlpha" Single="0.5"/>
        <a:UISettings Name="UISettings" UISettings="$Required" />
        <cor:Int32 Name="AngleDelta"/>
        <col:IList Name="List" IList="$Required"/>

        <!-- The index passed down from the repeater.-->
        <Index Name="Index" Index="$Required"/>
        <cor:String Name="GalleryView" String="$Required" />
        <Image Name="BackgroundImage" Source="resx://Library/Library.Resources/Focus_Outline" NineGrid="4,4,4,4"/>
        <Image Name="BackgroundImageList" Source="resx://Library/Library.Resources/ButtonLeftFocus" NineGrid="4,4,4,4"/>
        <Image Name="BackgroundImageCoverArt" Source="resx://Library/Library.Resources/Focus_Outline" NineGrid="4,4,4,4"/>
        <Animation Name="LostFocus" />
        <Animation Name="GotFocus" />

    </Properties>

    <Locals>
        <ClickHandler Name="Clicker" Command="[GalleryItem]"/>
        <cor:Int32 Name="CurrentIndex" />
        <MathTransformer Name="ComputeNormalizedIndex"/>
        <MathTransformer Name="ComputeRotation" Type="Int32"/>
        <MathTransformer Name="ComputeHeightofbFromAngleofA" Type="Int32"/>
        <Rotation Name="Rotation" AngleDegrees="0" Axis="0,1,0"/>
        <cor:Int32 Name="NewHeight"/>

        <!-- This animation will scale the image. -->
        <Animation Name="LostFocusCoverArt" Loop="0">
            <Keyframes>
                <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" RelativeTo="Current" />
                <ScaleKeyframe Time="0.1" Value="1,1,1" RelativeTo="Final" />
            </Keyframes>
        </Animation>

        <Animation Name="GotFocusCoverArt" Loop="0" CenterPointPercent=".5,.5,0" >
            <Keyframes>
                <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" />
                <ScaleKeyframe Time="0.4" Value="[UISettings.Gallery.FocusCoverArtScale]" RelativeTo="Final" />
            </Keyframes>
        </Animation>

        <Animation Name="LostFocusCarousel" Loop="0">
            <Keyframes>
                <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" RelativeTo="Current" />
                <ScaleKeyframe Time="0.1" Value="1,1,1" RelativeTo="Final" />
            </Keyframes>
        </Animation>

        <Animation Name="GotFocusCarousel" Loop="0" CenterPointPercent=".5,.5,0" >
            <Keyframes>
                <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" />
                <ScaleKeyframe Time="0.4" Value="[UISettings.Gallery.FocusCarouselScale]" RelativeTo="Final" />
            </Keyframes>
        </Animation>

        <Animation Name="ContentChangeShowCarousel">
            <Keyframes>
                <AlphaKeyframe Time="0" Value="0" RelativeTo="Absolute" />
                <AlphaKeyframe Time=".3" RelativeTo="Final" />
            </Keyframes>
        </Animation>

        <Animation Name="RotateCarousel">
            <Keyframes>
                <RotateKeyframe Time="0" Value="0deg;0,1,0" RelativeTo="Current" Interpolation="Log" />
                <RotateKeyframe Time=".5" Value="0deg;0,1,0" RelativeTo="Final" />
            </Keyframes>
        </Animation>


        <!-- This animation will scale the image. -->
        <Animation Name="LostFocusList" Loop="0">
            <Keyframes>
                <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" RelativeTo="Current" />
                <ScaleKeyframe Time="0.1" Value="1,1,1" RelativeTo="Final" />
            </Keyframes>
        </Animation>

        <Animation Name="GotFocusList" Loop="0" CenterPointPercent=".1,.1,0" >
            <Keyframes>
                <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" />
                <ScaleKeyframe Time="0.2" Value="[UISettings.Gallery.FocusListScale]" RelativeTo="Final" />
            </Keyframes>
        </Animation>
    </Locals>

    <Rules>
        <!-- Mark ourselves as KeyInteractive so we can receive key focus.    -->
        <!--<Binding Source="[MovieBrowser.AngleDelta]" Target="[AngleDelta]"/>
        <Binding Source="[FocusedIndex.Value!cor:String]" Target="[FocusedIndexLabel.Content]"/>
        <Binding Source="[Index.Value!cor:String]" Target="[OptionIndexLabel.Content]"/>
        <Binding Source="[Index.Value]" Target="[Application.CurrentItemIndexPosition]"/>
        <Binding Source="[FocusedIndex.Value]" Target="[Application.CurrentFocusedItemIndex]"/>
        <Binding Source="[Rotation.AngleDegrees]" Target="[Application.CurrentAngleDegrees]"/>-->
        <Default Target="[Input.KeyInteractive]" Value="true"/>

        <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>

        <Binding Source="[GalleryItem.MenuCoverArt]" Target="[MenuCover.Content]" />

        <Condition Source="[GalleryView]" SourceValue="List" ConditionOp="Equals" >
            <Actions>
                <!--<Set Target="[Caption.Font]" Value="font://s:ListFontSelected" />-->
                <Set Target="[MenuCover.Visible]" Value="false" />
                <Set Target="[Caption.Visible]" Value="true" />
                <Set Target="[LostFocus]" Value="[LostFocusList]" />
                <Set Target="[GotFocus]" Value="[GotFocusList]" />
                <!--<Set Target="[Background.Content]" Value="[BackgroundImageList]" />-->
                <Set Target="[Background.Content]" Value="null" />
            </Actions>
        </Condition>

        <Changed Source="[GalleryItem.MenuCoverArt]" InitialEvaluate="true">
            <Conditions>
                <Equality Source="[GalleryView]" Value="Cover Art" ConditionOp="Equals" />
                <Equality Source="[GalleryItem.HasCover]" Value="true" ConditionOp="Equals" />
            </Conditions>
            <Actions>
                <Set Target="[Caption.Visible]" Value="false" />
            </Actions>
        </Changed>

        <Condition Source="[GalleryView]" SourceValue="Cover Art" ConditionOp="Equals" >
            <Actions>
                <Set Target="[MenuCover.Visible]" Value="true" />
                <Set Target="[LostFocus]" Value="[LostFocusCoverArt]" />
                <Set Target="[GotFocus]" Value="[GotFocusCoverArt]" />
                <!--<Set Target="[Background.Content]" Value="[BackgroundImageCoverArt]" />-->
                <Set Target="[Caption.Font]" Value="font://s:Normal" />
            </Actions>
        </Condition>

        <!--<Condition Source="[GalleryView]" SourceValue="Carousel" ConditionOp="Equals">
            <Actions>
                <Set Target="[MenuCover.Visible]" Value="true" />
                <Set Target="[LostFocus]" Value="[LostFocusCarousel]" />
                <Set Target="[GotFocus]" Value="[GotFocusCarousel]" />
                <Set Target="[Background.Content]" Value="[BackgroundImageCoverArt]" />
                <Set Target="[Caption.Font]" Value="font://s:Normal" />
            </Actions>
        </Condition>

        --><!-- BEGINNING OF CAROUSEL CONDITIONS --><!--
        --><!-- Items to the LEFT of the focus item --><!--
        <Changed Source="[FocusedIndex]" InitialEvaluate="true">
            <Conditions>
                <Equality Source="[GalleryView]" ConditionOp="Equals" Value="Carousel"/>
                <Equality Source="[FocusedIndex.Value]" ConditionOp="LessThan" Value="[Index.Value]"/>
            </Conditions>
            <Actions>
                <Set Target="[ItemPanel.CenterPointPercent]" Value="0,.5,0"/>
                <Set Target="[ComputeNormalizedIndex.SubtractInt]" Value="[FocusedIndex.Value]" />
                <Set Target="[ComputeRotation.MultiplyInt]" Value="[Index.Value]" Transformer="[ComputeNormalizedIndex]" />
                <Set Target="[Rotation.AngleDegrees]" Value="[AngleDelta]" Transformer="[ComputeRotation]" />
                <Set Target="[ItemPanel.Rotation]" Value="[Rotation]" />
                <Set Target="[ItemPanel.Padding]" Value="[Application.MoveToInset]"/>
            </Actions>
        </Changed>

        --><!-- The focus item --><!--
        <Changed Source="[FocusedIndex]" InitialEvaluate="true">
            <Conditions>
                <Equality Source="[GalleryView]" ConditionOp="Equals" Value="Carousel"/>
                <Equality Source="[FocusedIndex.Value]" ConditionOp="Equals" Value="[Index.Value]"/>
            </Conditions>
            <Actions>
                <Set Target="[ItemPanel.CenterPointPercent]" Value="1,.5,0"/>
                <Set Target="[ComputeNormalizedIndex.SubtractInt]" Value="[FocusedIndex.Value]" />
                <Set Target="[ComputeRotation.MultiplyInt]" Value="[Index.Value]" Transformer="[ComputeNormalizedIndex]" />
                <Set Target="[Rotation.AngleDegrees]" Value="[AngleDelta]" Transformer="[ComputeRotation]" />
                <Set Target="[ItemPanel.Rotation]" Value="[Rotation]" />
            </Actions>
        </Changed>

        --><!-- Items to the RIGHT of the focus item --><!--
        <Changed Source="[FocusedIndex]" InitialEvaluate="true">
            <Conditions>
                <Equality Source="[GalleryView]" ConditionOp="Equals" Value="Carousel"/>
                <Equality Source="[FocusedIndex.Value]" ConditionOp="GreaterThan" Value="[Index.Value]"/>
            </Conditions>
            <Actions>
                <Set Target="[ItemPanel.CenterPointPercent]" Value="1,.5,0"/>
                <Set Target="[ComputeNormalizedIndex.SubtractInt]" Value="[FocusedIndex.Value]" />
                <Set Target="[ComputeRotation.MultiplyInt]" Value="[Index.Value]" Transformer="[ComputeNormalizedIndex]" />
                <Set Target="[Rotation.AngleDegrees]" Value="[AngleDelta]" Transformer="[ComputeRotation]" />
                <Set Target="[ItemPanel.Rotation]" Value="[Rotation]" />
                <Set Target="[ItemPanel.Padding]" Value="[Application.MoveToInset]"/>
            </Actions>
        </Changed>
        --><!-- END OF CAROUSEL CONDITIONS -->

        <Condition Source="[GalleryView]" SourceValue="Folder View" ConditionOp="Equals" >
            <Actions>
                <Set Target="[MenuCover.Visible]" Value="true" />
                <Set Target="[LostFocus]" Value="[LostFocusCoverArt]" />
                <Set Target="[GotFocus]" Value="[GotFocusCoverArt]" />
                <!--<Set Target="[Background.Content]" Value="[BackgroundImageCoverArt]" />-->
                <Set Target="[Caption.Font]" Value="font://s:Normal" />
            </Actions>
        </Condition>

        <!-- If we get key focus, change our background color to indicate it. -->
        <Condition Source="[Input.KeyFocus]" SourceValue="true">
            <Actions>
                <PlayAnimation Target="[ItemPanel]" Animation="[GotFocus]" />
                <Set Target="[MenuCover.Alpha]" Value="1.0"/>
                <Set Target="[Caption.Color]" Value="color://s:FocusColor" />
                <Set Target="[Background.Visible]" Value="true"/>
                <Set Target="[FocusedIndex.Value]" Value="[Index.SourceValue]"/>
                <Set Target="[MovieBrowser.FocusedItem]" Value="[GalleryItem]" />
                <!-- Play an animation on the cover target item. -->
                <PlaySound Sound="sound://me:Focus" />
            </Actions>
        </Condition>


        <!-- when we loose focus -->
        <Condition Source="[Input.KeyFocus]" SourceValue="false">
            <Actions>
                <!-- Play an animation on the cover target item. -->
                <PlayAnimation Target="[ItemPanel]" Animation="[LostFocus]"/>

            </Actions>
        </Condition>
    </Rules>

    <Content>
        <Panel Name="ItemPanel" Layout="Anchor" Scale="1.0,1.0,1.0" CenterPointPercent="0.5,0.75,0.0">
            <Children>
                <Panel Name="ImagePanel" Margins="0,0,0,0">
                    <Children>
                        <Text Name="Caption" Content="[GalleryItem.Caption]" Font="font://s:ListFont" Color="White"  WordWrap="true" Margins="20,10,20,10" />
                        <Graphic Name="MenuCover" Content="[GalleryItem.MenuCoverArt]" Alpha="[CoverArtAlpha]" SizingPolicy="SizeToConstraint">
                            <!--<Children>
                                <Panel Layout="VerticalFlow">
                                    <Children>
                                        <Panel Layout="HorizontalFlow">
                                            <Children>
                                                <Text Content="FocusedIndex" Font="Calibri, 14" Color="Yellow"/>
                                                <Text Name="FocusedIndexLabel" Font="Calibri, 14" Color="Yellow"/>
                                            </Children>
                                        </Panel>
                                        <Panel Layout="HorizontalFlow">
                                            <Children>
                                                <Text Content="OptionIndex" Font="Calibri, 14" Color="Yellow"/>
                                                <Text Name="OptionIndexLabel" Font="Calibri, 14" Color="Yellow"/>
                                            </Children>
                                        </Panel>
                                    </Children>
                                </Panel>
                            </Children>-->
                        </Graphic>
                    </Children>
                </Panel>

                <Graphic Name="Background" Content="[BackgroundImage]" Visible="false">
                    <LayoutInput>
                        <AnchorLayoutInput Left="ImagePanel,-0.03" Right="ImagePanel,1.03" Top="ImagePanel,-0.02" Bottom="ImagePanel,1.02"/>
                    </LayoutInput>
                </Graphic>

            </Children>
            <Animations>
                <Animation Type="Rotate">
                    <Keyframes>
                        <RotateKeyframe Time="0" Value="0deg;0,1,0" RelativeTo="Current" Interpolation="Log" />
                        <RotateKeyframe Time=".5" Value="0deg;0,1,0" RelativeTo="Final" />
                    </Keyframes>
                </Animation>
                <Animation Type="ContentChangeShow">
                    <Keyframes>
                        <AlphaKeyframe Time="0" Value="0" RelativeTo="Absolute" />
                        <AlphaKeyframe Time=".3" RelativeTo="Final" />
                    </Keyframes>
                </Animation>
            </Animations>
        </Panel>
    </Content>
</UI>

</Mcml>
