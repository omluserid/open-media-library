<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:z="assembly://Library/Library"
	  xmlns:sys="assembly://mscorlib/System"
	  xmlns:styles="resx://Library/Library.Resources/Styles"
	  xmlns:core="resx://Library/Library.Resources/CoreControls"
	  xmlns:me="Me">

  <!-- A list of filters on a filtered content page -->
  <UI Name="FilterList">
    <Properties>
      <z:MovieGallery Name="Page" MovieGallery="$Required"/>
    </Properties>

    <Locals>
      <ScrollingData Name="ScrollingData"/>
      <ScrollingHandler Name="ScrollingHandler" HandleDirectionalKeys="true" HandlePageCommands="true" HandlePageKeys="true"/>
    </Locals>

    <Rules>
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Default Target="[ScrollingData.Repeater]" Value="[Repeater]"/>
      <Default Target="[Repeater.Source]" Value="[Page.Categories.Options]" />
      
      <Rule>
        <Conditions>
          <IsValid Source="[Page.Categories]"/>
        </Conditions>
        <Actions>
          <Set Target="[Repeater.Source]" Value="[Page.Categories.Options]"/>
        </Actions>
      </Rule>
    </Rules>

    <Content>
      <Scroller Name="Scroll" Orientation="Horizontal" FadeSize="5" ScrollingData="[ScrollingData]" Navigation="ContainHorizontal" >
        <Children>
        <Repeater Name="Repeater"  Navigation="RememberFocus"  >
          <Layout>
            <FlowLayout Orientation="Horizontal" Spacing="8,0"/>
          </Layout>
          <Content>
            <me:CategoryButton Category="[RepeatedItem!z:FilterCommand]" Choice="[Page.Categories]"/>
          </Content>
        </Repeater>
        </Children>
      </Scroller>
      
    </Content>
  </UI>

  <!-- A single filter from a filter list -->
  <UI Name="FilterButton">
    <Properties>
      <z:FilterCommand Name="Option" FilterCommand="$Required"/>
      <Choice Name="Choice" Choice="$Required"/>
    </Properties>

    <Locals>
      <Command Name="SelectOption"/>
    </Locals>

    <Rules>
      <!-- When the button is clicked, set this guy as the selected filter. -->
      <Changed Source="[SelectOption.Invoked]">
        <Actions>
          <Set Target="[Choice.Chosen]" Value="[Option]"/>
        </Actions>
      </Changed>

      <!-- If we are the active filter set Selected to true. -->
      <Condition Source="[Choice.Chosen]" SourceValue="[Option]" Target="[SelectOption.Selected]" Value="true"/>
      <Default Target="[SelectOption.Selected]" Value="false"/>

      <!-- If this is a ModelItem, use the Description property for the label. -->
      <Rule>
        <Conditions>
          <IsType Source="[Option]" Type="z:FilterCommand"/>
        </Conditions>
        <Actions>
          <Set Target="[SelectOption.Description]" Value="[Option!z:FilterCommand.Caption]"/>
        </Actions>
      </Rule>
      <!-- Otherwise just use ToString(). -->
      <Default Target="[SelectOption.Description]" Value="[Option.ToString]"/>
    </Rules>

    <Content>
      <core:Button Model="[SelectOption]" TextColor="color://styles:Text.Active" TextMargins="8,-2,8,2"/>
      <!--<me:CategoryButton Command="[Option]" Caption="[Option!z:CategoryCommand.Caption]" />-->
      <!--<me:CategoryButton Category="[Option!z:CategoryCommand]" />-->
    </Content>
  </UI>

  <!-- Simple button -->
  <UI Name="CategoryButton">
    <Properties>
      <z:FilterCommand Name="Category" FilterCommand="$Required" />
      <Choice Name="Choice" Choice="$Required"/>
      
      <!-- Background color properties. -->
      <Color Name="BackgroundColor" Color="Transparent"/>
      <Color Name="BackgroundFocusedColor" Color="Transparent"/>
      <Color Name="BackgroundHoverColor" Color="PaleGoldenrod"/>
      <Color Name="BackgroundPressedColor" Color="White"/>

      <!-- Label color properties. -->
      <Color Name="LabelColor" Color="White"/>
      <Color Name="LabelFocusedColor" Color="White"/>
      <Color Name="LabelHoverColor" Color="DimGray"/>
      <Color Name="LabelPressedColor" Color="Black"/>

    </Properties>

    <Locals>
      <!-- React to "click" input. -->
      <ClickHandler Name="Clicker"/>

    </Locals>

    <Rules>

      <!-- The command description is displayed by the text box. A  -->
      <!-- binding is used in case the description changes at       -->
      <!-- runtime.                                                 -->
      <Binding Source="[Category.Caption]" Target="[Label.Content]"/>
      <Binding Source="[Category]" Target="[Clicker.Command]"/>
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <Changed Source="[Category.Invoked]">
        <Actions>
          <Set Target="[Choice.Chosen]" Value="[Category]"/>
        </Actions>
      </Changed>

      <!-- Change color on click. -->
      <Condition Source="[Clicker.Clicking]" SourceValue="true">
        <Actions>
          <Set Target="[Background.Content]" Value="[BackgroundPressedColor]"/>
          <Set Target="[Label.Color]" Value="[LabelPressedColor]"/>
        </Actions>
      </Condition>

      <!-- Change color on key focus. -->
      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <!--<Set Target="[Background.Content]" Value="[BackgroundHoverColor]"/>-->
          <Set Target="[Label.Color]" Value="White"/>
        </Actions>
      </Condition>
      
      <!-- Change color on mouse focus. -->
      <Condition Source="[Input.MouseFocus]" SourceValue="true">
        <Actions>
          <!--<Set Target="[Background.Content]" Value="[BackgroundHoverColor]"/>-->
          <Set Target="[Label.Color]" Value="White"/>
        </Actions>
      </Condition>

    </Rules>

    <Content>
      <!-- Solid background color. -->
      <ColorFill Name="Background" Content="[BackgroundColor]" Padding="5,5,5,5">
        <Children>
          <Text Name="Label" Content="[Category.Caption]" Font="font://styles:ButtonFont" Color="color://styles:NormalColor" />
        </Children>
      </ColorFill>
    </Content>

  </UI>
  
</Mcml>
