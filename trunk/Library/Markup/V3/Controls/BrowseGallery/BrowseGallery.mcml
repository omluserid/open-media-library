<Mcml
    xmlns       ="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor   ="assembly://MsCorLib/System"
    xmlns:shell ="assembly://Library/Library.Code.V3"
    xmlns:omlShell ="assembly://Library/Library"
    xmlns:comm="resx://Library/Library.Resources/V3_Globals"
    xmlns:wait="resx://Library/Library.Resources/V3_Controls_WaitCursor"
    xmlns:ctl="resx://Library/Library.Resources/V3_Controls_AutoScrollRegion"
    xmlns:me    ="Me">

  <Aggregate Source="resx://Library/Library.Resources/V3_Controls_BrowseGroupedGallery"/>
  <Aggregate Source="resx://Library/Library.Resources/V3_Controls_BrowseJumpControl"/>
  <Aggregate Source="resx://Library/Library.Resources/V3_Controls_BrowseListViewItem"/>
  <Aggregate Source="resx://Library/Library.Resources/V3_MovieItem"/>

  <Image Name="Browse.ListViewStrip"    Source="resx://Library/Library.Resources/V3_Controls_BrowseGallery_ListViewStrip" />
  <Image Name="Browse.ListViewStripTop" Source="resx://Library/Library.Resources/V3_Controls_BrowseGallery_ListViewStripTop" />

  <UI Name="GroupedGalleryTest">

    <Properties>
      <omlShell:OMLApplication Name="Application" OMLApplication="$Required"/>
      <shell:IBrowsePivot   Name="Model"         IBrowsePivot="$Required"/>
      <shell:GalleryPage Name="Page" GalleryPage="null"/>
      <IntRangedValue Name="SelectedIndex"       IntRangedValue="$Required"/>
      <IntRangedValue Name="TotalCount"          IntRangedValue="$Required"/>
      <IntRangedValue Name="MetaDataTopShift"    IntRangedValue="$Required" />
      <IntRangedValue Name="GalleryContentShift" IntRangedValue="$Required" />
      <IntRangedValue Name="MetaDataLeftShift"   IntRangedValue="$Required" />
      <EditableText   Name="FocusArea"           EditableText="$Required"/>
      <RangedValue    Name="MetadataDelay"       RangedValue="$Required"/>
      <EditableText   Name="ItemMode"            EditableText="$Required"/>
      <BooleanChoice  Name="IsListView"          BooleanChoice="$Required" />
      <BooleanChoice  Name="IsOneRow"            BooleanChoice="$Required" />
      <EditableText   Name="TransitionState"     EditableText="$Required"/>

      <IntRangedValue Name="SelectedGroup" Value="0"/>
      <!-- used to pass the selected group index around in a grouped gallery -->
      <IntRangedValue Name="TotalCountOverride"/>
      <!-- used by galleries that override the count/index UI -->
      <IntRangedValue Name="ItemIndexOverride"/>
      <!-- used by galleries that override the count/index UI -->

      <cor:Boolean    Name="InListMaker"      Boolean="false" />

      <Command        Name="NavigateIntoContent"  Command="$Required"/>
      <cor:String     Name="DefaultContentItemTemplate" String="me:GalleryGroup"/>
      <cor:String     Name="DefaultGalleryLayout" String="twoRowGalleryItemPoster"/>

      <!-- Item layout -->

      <cor:Boolean Name="ShowScrollControl" Boolean="true"/>
      <cor:Boolean Name="DiscardOffscreenVisuals" Boolean="true"/>
      <cor:Boolean Name="ShowGallerySelector" Boolean="true"/>
      <cor:Boolean Name="ShowListViewStrip" Boolean="false"/>

      <Inset Name="GalleryPadding"   Inset="0, 0, 0, 0"/>

      <!-- listview defaults-->
      <!--ScrollingLayout Name="ScrollLayout" Orientation="Horizontal" Prefetch="2.0" PreferredAreaOfInterest="RepeatedItemAreaOfInterest"/>
      <ScrollIntoViewDisposition Name="DefaultScrollDisposition" LockedPosition="0.0" LockedAlignment="0.0"/-->
      <Inset Name="ListViewGalleryPadding" Inset="0, 40, 0, 30"/>
      <cor:Boolean Name="ListViewShowGallerySelector" Boolean="false"/>
      <Animation Name="ListViewMoveAnimation" Animation="animation://comm:ListViewItem.Move"/>
      <cor:Single Name="ListViewMetadataDelayTime" Single="0.25"/>
      <!--cor:UInt32 Name="KeyRepeatSpeed" UInt32="350"/-->
      <!--cor:Int32 Name="ScrollInterval" Int32="700"/-->
      <ILayout Name="ListViewFlowLayout" ILayout="global://me:ListViewDefaultLayout"/>
      <AnchorEdge Name="ListViewJILVerticalAnchor" AnchorEdge="Parent, 1, 100"/>
      <Size Name="ListViewItemSize" Size="462, 59"/>
      <Size Name="GroupedListViewItemSize" Size="462, 53"/>
      <!-- end listview defaults-->

      <!-- Keyboard: EndPadding = (3 x item size) + (2 x spacing) = (366 + 4) = 370 -->
      <shell:ScrollIntoViewDisposition Name="DefaultScrollDisposition" BeginPadding="0" EndPadding="370" EndPaddingRelativeTo="Near"/>

      <!-- Mouse: Just barely enough to make sure you don't get a half an item selected.
                 BeginPadding = 244 (from RootPadding) - 52 (AutoScroll) = 192 -->
      <shell:ScrollIntoViewDisposition Name="MouseScrollDisposition" BeginPadding="-192" EndPadding="52" EndPaddingRelativeTo="Far"/>

      <!-- Autoscroll: Just keep focus on screen, no more. -->
      <!-- The numbers here are different because autoscroll mode uses a dynamic locking mode. -->
      <shell:ScrollIntoViewDisposition Name="AutoScrollDisposition" BeginPadding="0" EndPadding="0" EndPaddingRelativeTo="Far"/>


      <Animation Name="MoveAnimation" Animation="animation://me:Browse.Gallery.Item.Move"/>

      <cor:Single   Name="MetadataDelayTime" Single="0.133"/>
      <cor:UInt32   Name="KeyRepeatSpeed" UInt32="200"/>
      <cor:Int32    Name="DelayInterval"  Int32="500"/>
      <cor:Int32    Name="ScrollInterval" Int32="200"/>
      <EditableText Name="KeyAxis" Value="none"/>

      <AnchorEdge Name="JILVerticalAnchor" AnchorEdge="Parent, 1, 70"/>

      <cor:Random Name="Random"/>
      <shell:RepeaterHelper Name="RepeaterHelper"></shell:RepeaterHelper>

      <FlowLayout Name="FlowLayout" Orientation="Horizontal" Spacing="0, 0" Repeat="WhenTooBig" RepeatGap="70, 0" MissingItemPolicy="SizeToAverage" MinimumSampleSize="3"/>
      <ILayout Name="UnGroupedFlowLayout" ILayout="global://me:GalleryDefaultLayout"/>
      <shell:AreaOfInterestHelper Name="AreaOfInterestHelper"/>
    </Properties>

    <Locals>
      <Environment Name="Environment"/>

      <BooleanChoice  Name="IsGrouped"/>
      <cor:String Name="ContentItemTemplate" String="null"/>
      <cor:String Name="GalleryLayout" String="oneRowGalleryItemPoster"/>

      <ScrollingData Name="ScrollData" ScrollStep="90" BeginPadding="0" EndPadding="370" EndPaddingRelativeTo="Near"/>
      <BooleanChoice Name="AutoScrollRegionActive"/>
      <Command Name="ScrollUpCommand"/>
      <Command Name="ScrollDownCommand"/>
      <Command Name="PageUpCommand"/>
      <Command Name="PageDownCommand"/>
      <Size Name="AutoScrollSize" Size="52,0"/>

      <!-- This helper will let us only specify different templates for grouped items. -->
      <!--shell:RepeatHelper Name="RepeatHelper">
                <Mappings>
                    <shell:ContentMapping Type="shell:IBrowseGroup" ContentName="GroupItem"/>
                </Mappings>
            </shell:RepeatHelper-->

      <!-- This helper will set FocusOrder for initial focus -->
      <!--RepeaterFocusHelper Name="FocusOrderHelper"/-->

      <AnchorEdge Name="TopStripTopEdge" Id="Parent" Percent="0" Offset="-140" />
      <AnchorEdge Name="TopStripBottomEdge" Id="Parent" Percent="0" Offset="-40" />
      <AnchorEdge Name="BottomStripTopEdge" Id="Parent" Percent="1" Offset="30" />
      <AnchorEdge Name="BottomStripBottomEdge" Id="Parent" Percent="1" Offset="130" />

      <ScrollingHandler Name="ScrollingHandler" HandlerStage="Bubbled"/>

      <!-- This is used to pass all these values as a single property down into the various gallery UI objects.
                 It keeps the declarations short and allows a much simpler edit to add a new value since the UIs
                 in between only pass the PropertySet and don't care what's in it. -->
      <PropertySet Name="ItemProperties">
        <Entries>
          <IntRangedValue Name="SelectedIndex"       IntRangedValue="[SelectedIndex]"/>
          <IntRangedValue Name="SelectedGroup"       IntRangedValue="[SelectedGroup]"/>
          <IntRangedValue Name="MetaDataTopShift"    IntRangedValue="[MetaDataTopShift]"/>
          <IntRangedValue Name="GalleryContentShift" IntRangedValue="[GalleryContentShift]"/>
          <IntRangedValue Name="MetaDataLeftShift"   IntRangedValue="[MetaDataLeftShift]"/>
          <IntRangedValue Name="TotalCount"          IntRangedValue="[TotalCount]"/>
          <BooleanChoice  Name="IsOneRow"            BooleanChoice="[IsOneRow]"/>
          <EditableText   Name="TransitionState"     EditableText="[TransitionState]"/>
          <EditableText   Name="ItemMode"            EditableText="[ItemMode]"/>
          <EditableText   Name="FocusArea"           EditableText="[FocusArea]"/>
          <EditableText   Name="KeyAxis"             EditableText="[KeyAxis]"/>
          <cor:Boolean    Name="InListMaker"         Boolean="[InListMaker]"/>
          <cor:Random     Name="Random"              Random="[Random]"/>
        </Entries>
      </PropertySet>

      <!-- Default group details for the non-grouped case. -->
      <PropertySet Name="GroupProperties">
        <Entries>
          <IntRangedValue Name="GroupIndex" Value="0"/>
          <IntRangedValue Name="GroupCount" Value="0"/>
        </Entries>
      </PropertySet>
      <TypingHandler Name="Typer" HandlerStage="Bubbled" MaxLength="4" TypingPolicy="TripleTap"/>
      <Timer Name="JILtimer" AutoRepeat="false" Interval="1500" />
    </Locals>

    <Rules>
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollData]"/>
      <!-- @ -->
      <Default Target="[ScrollData.Repeater]" Value="[Repeater]"/>
      <!-- @ -->
      <Default Target="[Repeater.Source]" Value="[Model.Content]"/>
    </Rules>
    <Content>

      <Panel Name="GalleryPanel" Padding="[GalleryPadding]">
        <Layout>
          <AnchorLayout SizeToHorizontalChildren="false"/>
        </Layout>
        <Children>
          <wait:WaitCursorHost Name="WaitCursor" Visible="false" Margins="-224,0,0,0"/>
          <Graphic Name="ListViewStripTop" Content="image://me:Browse.ListViewStripTop" Visible="false">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 0, -224" Top="[TopStripTopEdge]" Right="Parent, 1" Bottom="[TopStripBottomEdge]"
                                 ContributesToHeight="false" ContributesToWidth="false" />
            </LayoutInput>
            <Animations>
              <Animation Animation="animation://me:Browse.Gallery.Strip.NavigateAway"/>
            </Animations>
          </Graphic>

          <Graphic Name="ListViewStripBottom" Content="image://me:Browse.ListViewStrip" Visible="false">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 0, -224" Top="[BottomStripTopEdge]" Right="Parent, 1" Bottom="[BottomStripBottomEdge]"
                                 ContributesToHeight="false" ContributesToWidth="false" />
            </LayoutInput>
            <Animations>
              <Animation Animation="animation://me:Browse.Gallery.Strip.NavigateAway"/>
            </Animations>
          </Graphic>

          <!-- Scrolling content -->
          <!-- @ the secret is margins -->
          <Panel Name="Scroller">
            <Layout>
              <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
            </Layout>
            <Children>

              <!-- @ the scroller needs focus padding? -->
              <!--Scroller MouseInteractive="false" Name="ScrollerGrid" Orientation="Horizontal" MaximumSize="0,0" ScrollingData="[ScrollData]" Prefetch="1.0" FocusPadding="0" Margins="0,0,0,0" Navigation="FlowVertical"-->
              <Scroller MouseInteractive="false" Name="ScrollerGrid" Navigation="ContainHorizontal,Group" MaximumSize="0,445" Orientation="Horizontal" Prefetch="1">
                <LayoutInput>
                  <AnchorLayoutInput Left="Parent,0,200" Vertical="Center"/>
                </LayoutInput>
                <Children>
                  <!-- @ -->
                  <!--Repeater MouseInteractive="false" Name="Repeater" ContentName="[Model.ContentItemTemplate]" Layout="[FlowLayout]" DiscardOffscreenVisuals="true" Navigation="PreferFocusOrder,FlowVertical"-->
                  <Repeater MouseInteractive="false" Name="Repeater" ContentName="[Model.ContentItemTemplate]" Navigation="FlowVertical,Group" MaximumSize="0,445" DiscardOffscreenVisuals="false">
                    <LayoutInput>
                      <AnchorLayoutInput Vertical="Near" Horizontal="Near"/>
                    </LayoutInput>
                    <Layout>
                      <FlowLayout AllowWrap="false" Orientation="Horizontal" Repeat="Always" HideOffscreenItems="false" RepeatGap="5,0" Spacing="5,0"/>
                    </Layout>
                  </Repeater>
                </Children>
              </Scroller>
            </Children>
          </Panel>
        </Children>
      </Panel>

    </Content>
    <Content Name="GalleryGroup">
      <me:GalleryGroup Page="[Page]" Application="[Application]" Model="[RepeatedItem!shell:BrowseGroup]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      MyIndex="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" Pivot="[Model]" SelectedGroup="[SelectedGroup]" SelectedIndex="[SelectedIndex]">
      </me:GalleryGroup>
    </Content>

  </UI>
  
  <UI Name="Gallery">

    <Properties>
      <omlShell:OMLApplication Name="Application" OMLApplication="$Required"/>
      <shell:IBrowsePivot   Name="Model"         IBrowsePivot="$Required"/>
      <shell:GalleryPage Name="Page" GalleryPage="null"/>
      <IntRangedValue Name="SelectedIndex"       IntRangedValue="$Required"/>
      <IntRangedValue Name="TotalCount"          IntRangedValue="$Required"/>
      <IntRangedValue Name="MetaDataTopShift"    IntRangedValue="$Required" />
      <IntRangedValue Name="GalleryContentShift" IntRangedValue="$Required" />
      <IntRangedValue Name="MetaDataLeftShift"   IntRangedValue="$Required" />
      <EditableText   Name="FocusArea"           EditableText="$Required"/>
      <RangedValue    Name="MetadataDelay"       RangedValue="$Required"/>
      <EditableText   Name="ItemMode"            EditableText="$Required"/>
      <BooleanChoice  Name="IsListView"          BooleanChoice="$Required" />
      <BooleanChoice  Name="IsOneRow"            BooleanChoice="$Required" />
      <EditableText   Name="TransitionState"     EditableText="$Required"/>

      <IntRangedValue Name="SelectedGroup" Value="0"/>
      <!-- used to pass the selected group index around in a grouped gallery -->
      <IntRangedValue Name="TotalCountOverride"/>
      <!-- used by galleries that override the count/index UI -->
      <IntRangedValue Name="ItemIndexOverride"/>
      <!-- used by galleries that override the count/index UI -->

      <cor:Boolean    Name="InListMaker"      Boolean="false" />

      <Command        Name="NavigateIntoContent"  Command="$Required"/>
      <cor:String     Name="DefaultContentItemTemplate" String="me:GalleryItem"/>
      <cor:String     Name="DefaultGalleryLayout" String="twoRowGalleryItemPoster"/>

      <!-- Item layout -->
      <ILayout Name="FlowLayout" ILayout="global://me:GalleryDefaultLayout"/>

      <cor:Boolean Name="ShowScrollControl" Boolean="true"/>
      <cor:Boolean Name="DiscardOffscreenVisuals" Boolean="true"/>
      <cor:Boolean Name="ShowGallerySelector" Boolean="true"/>
      <cor:Boolean Name="ShowListViewStrip" Boolean="false"/>

      <Inset Name="GalleryPadding"   Inset="0, 0, 0, 0"/>

      <!-- listview defaults-->
      <!--ScrollingLayout Name="ScrollLayout" Orientation="Horizontal" Prefetch="2.0" PreferredAreaOfInterest="RepeatedItemAreaOfInterest"/>
      <ScrollIntoViewDisposition Name="DefaultScrollDisposition" LockedPosition="0.0" LockedAlignment="0.0"/-->
      <Inset Name="ListViewGalleryPadding" Inset="0, 40, 0, 30"/>
      <cor:Boolean Name="ListViewShowGallerySelector" Boolean="false"/>
      <Animation Name="ListViewMoveAnimation" Animation="animation://comm:ListViewItem.Move"/>
      <cor:Single Name="ListViewMetadataDelayTime" Single="0.25"/>
      <!--cor:UInt32 Name="KeyRepeatSpeed" UInt32="350"/-->
      <!--cor:Int32 Name="ScrollInterval" Int32="700"/-->
      <ILayout Name="ListViewFlowLayout" ILayout="global://me:ListViewDefaultLayout"/>
      <AnchorEdge Name="ListViewJILVerticalAnchor" AnchorEdge="Parent, 1, 100"/>
      <Size Name="ListViewItemSize" Size="462, 59"/>
      <Size Name="GroupedListViewItemSize" Size="462, 53"/>
      <!-- end listview defaults-->

      <!-- Keyboard: EndPadding = (3 x item size) + (2 x spacing) = (366 + 4) = 370 -->
      <shell:ScrollIntoViewDisposition Name="DefaultScrollDisposition" BeginPadding="0" EndPadding="370" EndPaddingRelativeTo="Near"/>

      <!-- Mouse: Just barely enough to make sure you don't get a half an item selected.
                 BeginPadding = 244 (from RootPadding) - 52 (AutoScroll) = 192 -->
      <shell:ScrollIntoViewDisposition Name="MouseScrollDisposition" BeginPadding="-192" EndPadding="52" EndPaddingRelativeTo="Far"/>

      <!-- Autoscroll: Just keep focus on screen, no more. -->
      <!-- The numbers here are different because autoscroll mode uses a dynamic locking mode. -->
      <shell:ScrollIntoViewDisposition Name="AutoScrollDisposition" BeginPadding="0" EndPadding="0" EndPaddingRelativeTo="Far"/>


      <Animation Name="MoveAnimation" Animation="animation://me:Browse.Gallery.Item.Move"/>

      <cor:Single   Name="MetadataDelayTime" Single="0.133"/>
      <cor:UInt32   Name="KeyRepeatSpeed" UInt32="200"/>
      <cor:Int32    Name="DelayInterval"  Int32="500"/>
      <cor:Int32    Name="ScrollInterval" Int32="200"/>
      <EditableText Name="KeyAxis" Value="none"/>

      <AnchorEdge Name="JILVerticalAnchor" AnchorEdge="Parent, 1, 70"/>

      <cor:Random Name="Random"/>
      <shell:RepeaterHelper Name="RepeaterHelper"></shell:RepeaterHelper>

      <FlowLayout Name="GroupedFlowLayout" Orientation="Horizontal" Spacing="0, 0" Repeat="WhenTooBig" RepeatGap="70, 0" MissingItemPolicy="SizeToAverage" MinimumSampleSize="3"/>
      <ILayout Name="UnGroupedFlowLayout" ILayout="global://me:GalleryDefaultLayout"/>
      <shell:AreaOfInterestHelper Name="AreaOfInterestHelper"/>
    </Properties>

    <Locals>
      <Environment Name="Environment"/>

      <BooleanChoice  Name="IsGrouped"/>
      <cor:String Name="ContentItemTemplate" String="null"/>
      <cor:String Name="GalleryLayout" String="oneRowGalleryItemPoster"/>

      <ScrollingData Name="ScrollData" ScrollStep="90" BeginPadding="0" EndPadding="370" EndPaddingRelativeTo="Near"/>
      <BooleanChoice Name="AutoScrollRegionActive"/>
      <Command Name="ScrollUpCommand"/>
      <Command Name="ScrollDownCommand"/>
      <Command Name="PageUpCommand"/>
      <Command Name="PageDownCommand"/>
      <Size Name="AutoScrollSize" Size="52,0"/>

      <!-- This helper will let us only specify different templates for grouped items. -->
      <!--shell:RepeatHelper Name="RepeatHelper">
                <Mappings>
                    <shell:ContentMapping Type="shell:IBrowseGroup" ContentName="GroupItem"/>
                </Mappings>
            </shell:RepeatHelper-->

      <!-- This helper will set FocusOrder for initial focus -->
      <!--RepeaterFocusHelper Name="FocusOrderHelper"/-->

      <AnchorEdge Name="TopStripTopEdge" Id="Parent" Percent="0" Offset="-140" />
      <AnchorEdge Name="TopStripBottomEdge" Id="Parent" Percent="0" Offset="-40" />
      <AnchorEdge Name="BottomStripTopEdge" Id="Parent" Percent="1" Offset="30" />
      <AnchorEdge Name="BottomStripBottomEdge" Id="Parent" Percent="1" Offset="130" />

      <ScrollingHandler Name="ScrollingHandler" HandlerStage="Bubbled"/>

      <!-- This is used to pass all these values as a single property down into the various gallery UI objects.
                 It keeps the declarations short and allows a much simpler edit to add a new value since the UIs
                 in between only pass the PropertySet and don't care what's in it. -->
      <PropertySet Name="ItemProperties">
        <Entries>
          <IntRangedValue Name="SelectedIndex"       IntRangedValue="[SelectedIndex]"/>
          <IntRangedValue Name="SelectedGroup"       IntRangedValue="[SelectedGroup]"/>
          <IntRangedValue Name="MetaDataTopShift"    IntRangedValue="[MetaDataTopShift]"/>
          <IntRangedValue Name="GalleryContentShift" IntRangedValue="[GalleryContentShift]"/>
          <IntRangedValue Name="MetaDataLeftShift"   IntRangedValue="[MetaDataLeftShift]"/>
          <IntRangedValue Name="TotalCount"          IntRangedValue="[TotalCount]"/>
          <BooleanChoice  Name="IsOneRow"            BooleanChoice="[IsOneRow]"/>
          <EditableText   Name="TransitionState"     EditableText="[TransitionState]"/>
          <EditableText   Name="ItemMode"            EditableText="[ItemMode]"/>
          <EditableText   Name="FocusArea"           EditableText="[FocusArea]"/>
          <EditableText   Name="KeyAxis"             EditableText="[KeyAxis]"/>
          <cor:Boolean    Name="InListMaker"         Boolean="[InListMaker]"/>
          <cor:Random     Name="Random"              Random="[Random]"/>
        </Entries>
      </PropertySet>

      <!-- Default group details for the non-grouped case. -->
      <PropertySet Name="GroupProperties">
        <Entries>
          <IntRangedValue Name="GroupIndex" Value="0"/>
          <IntRangedValue Name="GroupCount" Value="0"/>
        </Entries>
      </PropertySet>
      <TypingHandler Name="Typer" HandlerStage="Bubbled" MaxLength="4" TypingPolicy="TripleTap"/>
      <Timer Name="JILtimer" AutoRepeat="false" Interval="1500" />
    </Locals>

    <Rules>
      <!--Binding Source="[Model.IsBusy]" Target="[WaitCursor.Visible]" /-->
      <!--Binding Source="[ScrollerGrid]" Target="[RepeaterHelper.Scroller]"/-->
      <!--Binding Source="[ScrollerGrid]" Target="[RepeaterHelper.Scroller]"/-->
      <Rule>
        <Conditions>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="Equals" Value="GalleryGroup"/>
        </Conditions>
        <Actions>
          <!--Invoke Target="[RepeaterHelper.SetScrollingLayout]" Panel="[Scroller]"/-->
          <!--Invoke Target="[RepeaterHelper.SetLayoutInput]" Panel="[Repeater]"/-->
          <!--Invoke Target="[RepeaterHelper.SetFlowLayout]" Panel="[GroupedFlowLayout]"/-->
          <!--Invoke Target="[RepeaterHelper.BindTargetViewItem]" SourceScroller="[Scroller]" TargetScrollData="[ScrollData]"/-->
          <Set Target="[IsGrouped.Value]" Value="true"/>
          <Set Target="[FlowLayout]" Value="[GroupedFlowLayout]"/>
          <!--Invoke Target="[Label.DetachAnimation]" type="ContentChangeHide" InvokePolicy="Synchronous"/-->
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="GalleryGroup"/>
        </Conditions>
        <Actions>
          <Set Target="[IsGrouped.Value]" Value="false"/>
          <Set Target="[FlowLayout]" Value="[UnGroupedFlowLayout]"/>
          <!--Invoke Target="[RepeaterHelper.SetScrollingLayout]" Panel="[Scroller]"/>
          <Invoke Target="[RepeaterHelper.SetLayoutInput]" Panel="[Repeater]"/-->
        </Actions>
      </Rule>
      
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="Equals" Value="ListViewItem"/>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="Equals" Value="ListViewItem4x3"/>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="Equals" Value="ListViewItemPoster"/>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="Equals" Value="ListViewItemGrouped"/>
        </Conditions>
        <Actions>
          <Set Target="[ShowGallerySelector]" Value="[ListViewShowGallerySelector]"/>
          <Set Target="[GalleryPadding]" Value="[ListViewGalleryPadding]"/>
          <Set Target="[MoveAnimation]" Value="[ListViewMoveAnimation]"/>
          <Set Target="[MetadataDelayTime]" Value="[ListViewMetadataDelayTime]"/>
          <!--Set Target="[FlowLayout]" Value="[ListViewFlowLayout]"/-->
          <Set Target="[Repeater.Layout]" Value="[ListViewFlowLayout]"/>
          
          <Set Target="[JILVerticalAnchor]" Value="[ListViewJILVerticalAnchor]"/>
          <Set Target="[ShowListViewStrip]" Value="true"/>

          <Set Target="[TopStripTopEdge.Offset]" Value="-140"/>
          <Set Target="[TopStripBottomEdge.Offset]" Value="-40"/>
          <Set Target="[BottomStripTopEdge.Offset]" Value="0"/>
          <Set Target="[BottomStripBottomEdge.Offset]" Value="100"/>
          <Set Target="[GalleryPanel.Padding]" Value="0, 40, 0, 0"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="ListViewItem"/>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="ListViewItem4x3"/>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="ListViewItemPoster"/>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="ListViewItemGrouped"/>
        </Conditions>
        <Actions>
          <Set Target="[ShowGallerySelector]" Value="true"/>
          <Set Target="[MoveAnimation]" Value="animation://me:Browse.Gallery.Item.Move"/>
          <Set Target="[MetadataDelayTime]" Value="0.133"/>
          <Set Target="[Repeater.Layout]" Value="[FlowLayout]"/>

          <Set Target="[JILVerticalAnchor]" Value="Parent, 1, 70"/>
          <Set Target="[ShowListViewStrip]" Value="false"/>

          <Set Target="[TopStripTopEdge.Offset]" Value="-140"/>
          <Set Target="[TopStripBottomEdge.Offset]" Value="-40"/>
          <Set Target="[BottomStripTopEdge.Offset]" Value="30"/>
          <Set Target="[BottomStripBottomEdge.Offset]" Value="130"/>
          <Set Target="[GalleryPanel.Padding]" Value="0, 0, 0, 0"/>
        </Actions>
      </Rule>
      <Binding Source="[Page.JILtext]" Target="[Typer.EditableText]"/>
      <Changed Source="[Typer.DisplayValue]">
        <Conditions>
          <Equality Source="[Model.SupportsJIL]" ConditionOp="Equals" Value="true"/>
          <!--added to prevent typing during load-->
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Set Target="[Page.TyperDisplay]" Value="[Typer.DisplayValue]"/>
          <Set Target="[JILdisplay.Content]" Value="[Typer.DisplayValue]"/>
        </Actions>
      </Changed>


      <Changed Source="[SelectedIndex.Value]">
        <Conditions>
          <Equality Source="[Page]" ConditionOp="NotEquals" Value="null"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Set Target="[Page.JILCurrentindex]" Value="[SelectedIndex.Value]"/>
        </Actions>
      </Changed>

      <Changed Source="[Page.JILtext.Value]">
        <Conditions>
          <Equality Source="[Page.JILtext.Value]" ConditionOp="NotEquals" Value=""/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Set Target="[JILtimer.Enabled]" Value="true"/>
        </Actions>
      </Changed>

      <Changed Source="[JILtimer.Tick]">
        <Conditions>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Page.JILtext.Submit]"/>
        </Actions>
      </Changed>

      <!-- The value has changed - Get a jump index -->
      <Rule>
        <Conditions>
          <Equality Source="[Typer.DisplayValue]" Value="" ConditionOp="NotEquals"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Invoke Target="[JILtimer.Start]"/>
        </Actions>
      </Rule>

      <!--added check for transitionstate to prevent err in scroller-need to do this for the JILText as well-->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Modified Source="[Page.JILindex]" InitialEvaluate="false"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ScrollData.Scroll]" amount="[Page.JILindex]"/>
        </Actions>
      </Rule>

      <!-- set up the arriving transition animation -->
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToForward">
        <Actions>
          <Invoke Target="[ListViewStripTop.AttachAnimation]" animation="animation://me:Browse.Gallery.Strip.NavigateToForward" InvokePolicy="Synchronous"/>
          <Invoke Target="[ListViewStripBottom.AttachAnimation]" animation="animation://me:Browse.Gallery.Strip.NavigateToForward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToBackward">
        <Actions>
          <Invoke Target="[ListViewStripTop.AttachAnimation]" animation="animation://me:Browse.Gallery.Strip.NavigateToBackward" InvokePolicy="Synchronous"/>
          <Invoke Target="[ListViewStripBottom.AttachAnimation]" animation="animation://me:Browse.Gallery.Strip.NavigateToBackward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>

      <!-- Attach the move animation after the transition has occurred so the gallery doesn't slide into position -->
      <!--Rule ConditionLogicalOp="Or">
            <Conditions>
              <Equality Source="[TransitionState.Value]" Value="Idle"/>
              <Modified Source="[SelectedIndex.Value]"/>
              <Modified Source="[SelectedGroup.Value]"/>
            </Conditions>
            <Actions>
              <Invoke Target="[Repeater.AttachAnimation]" animation="[MoveAnimation]" InvokePolicy="Synchronous"/>
            </Actions>
            </Rule-->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
          <Modified Source="[SelectedGroup.Value]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Repeater.AttachAnimation]" animation="[MoveAnimation]" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
          <Modified Source="[SelectedIndex.Value]"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Repeater.AttachAnimation]" animation="[MoveAnimation]" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
      <!-- Remove any move animation when coming back to the page so the gallery starts in the right position -->
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToBackward">
        <Actions>
          <Invoke Target="[Repeater.DetachAnimation]" type="Move" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>

      <!-- Turn off KeyInteractive (which our TypingHandler turned on for us).
                 We're only handling Bubbled events. -->
      <Default Target="[Input.KeyInteractive]" Value="false" />

      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollData]"/>
      <!-- @ -->
      <Default Target="[ScrollData.Repeater]" Value="[Repeater]"/>
      <!-- @ -->

      <!-- BrowseList scrolls at a different speed than the Browse Gallery -->
      <!--Default Target="[Input.KeyRepeatThreshold]" Value="[KeyRepeatSpeed]"/-->

      <!-- Hook up to the data source.
                 Note that we don't do a dynamic Binding here.  We rely on our parent forcing us to
                 refresh us when Content changes.  This ensures that left/right navigation animations
                 can be kept in sync (since the rules for those are managed by the parent). -->
      <Default Target="[Repeater.Source]" Value="[Model.Content]"/>

      <!-- Set the focus tracker to indicate the Gallery has the focus -->
      <Rule>
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" Value="true"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="Gallery"/>
        </Actions>
      </Rule>

      <!-- clear the JIL text when gallery does not have focus or when the page navigates. -->
      <!--Rule ConditionLogicalOp="Or">
              <Conditions>
                <Equality Source="[FocusArea.Value]" ConditionOp="NotEquals" Value="Gallery" />
                <Equality Source="[Environment.IsNavigating]" Value="true"/>
              </Conditions>
              <Actions>
                <Invoke Target="[JumpInListTripleTapHandler.Clear]" />
              </Actions>
            </Rule-->

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[FocusArea.Value]" ConditionOp="NotEquals" Value="Gallery" />
          <Equality Source="[Page]" ConditionOp="NotEquals" Value="null"/>
        </Conditions>
        <Actions>
          <Set Target="[Page.JILtext.Value]" Value=""/>
          <Set Target="[JILdisplay.Content]" Value=""/>
          <Set Target="[Typer.EditableText.Overtype]" Value="true"/>
        </Actions>
      </Rule>

      <!-- Content item template. -->
      <Condition Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" SourceValue="null"
                 Target="[ContentItemTemplate]" Value="[Model.ContentItemTemplate]"/>
      <Default Target="[ContentItemTemplate]" Value="[DefaultContentItemTemplate]"/>

      <Condition Source="[Page.GalleryLayout]" ConditionOp="NotEquals" SourceValue="null"
                 Target="[GalleryLayout]" Value="[Page.GalleryLayout]"/>
      <Condition Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" SourceValue="null"
                 Target="[GalleryLayout]" Value="[Model.ContentItemTemplate]"/>

      <!-- If the ContentItemTemplate changes, all our repeated content is invalid.  Re-repeat everything. -->
      <Rule>
        <Conditions>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="null"/>
          <Modified Source="[Model.ContentItemTemplate]" />
        </Conditions>
        <Actions>
          <!--Set Target="[GalleryLayout]" Value="[Model.ContentItemTemplate]"/-->
          <Set Target="[Repeater.ContentName]" Value="[Model.ContentItemTemplate]"/>
          <Invoke Target="[RepeaterHelper.ForceRefresh]" Repeater="[Repeater]"/>
          <!--Invoke Target="[Scroller.ForceContentChange]"/-->
        </Actions>
      </Rule>
      <!--Changed Source="[Model.ContentItemTemplate]">
                <Actions>
                  <Invoke Target="[RepeaterHelper.ForceRefresh]" Repeater="[Repeater]"/>
                </Actions>
            </Changed-->
      <!--Rule>
        <Conditions>
          <Equality Source="[Model.ContentItemTemplate]" ConditionOp="NotEquals" Value="null"/>
          <Modified Source="[Model.ContentItemTemplate]" />
        </Conditions>
        <Actions>
          <Invoke Target="[Repeater.ForceRefresh]"/>
        </Actions>
      </Rule-->
      <!--Changed Source="[ContentItemTemplate]">
                <Actions>
                    <Invoke Target="[Repeater.ForceRefresh]"/>
                </Actions>
            </Changed-->

      <!-- Content underlay -->
      <!--Rule>
                <Conditions>
                    <IsType Source="[Model]" Type="shell:IBrowseContentUnderlay"/>
                    <IsValid Source="[Model!shell:IBrowseContentUnderlay.ContentUnderlayTemplate]"/>
                </Conditions>
                <Actions>
                    <Set Target="[ContentUnderlay.Model]" Value="[Model]"/>
                    <Set Target="[ContentUnderlay.Source]" Value="[Model!shell:IBrowseContentUnderlay.ContentUnderlayTemplate]"/>
                    <Set Target="[ContentUnderlay.Visible]" Value="true"/>
                </Actions>
            </Rule-->

      <!-- Page Down -->
      <Changed Source="[PageDownCommand.Invoked]">
        <Actions>
          <Invoke Target="[ScrollData.PageDown]"/>
        </Actions>
      </Changed>

      <!-- Page Up -->
      <Changed Source="[PageUpCommand.Invoked]">
        <Actions>
          <Invoke Target="[ScrollData.PageUp]"/>
        </Actions>
      </Changed>

      <!--
                In the non-grouped case, we let the ScrollData handle Home/End and PageUp/PageDown.
                If we're grouped we do additional work so we always jump to item 0 in the destination group.
            -->
      <Rule>
        <Conditions>
          <Equality Source="[IsGrouped.Value]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[SelectedIndex.Value]" Value="0"/>
        </Actions>
      </Rule>

      <Rule>
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="true"/>
        </Conditions>
        <Actions>
          <DebugTrace Message="ISMOUSEACTIVE: {0}">
            <Params>
              <ObjectPath ObjectPath="[Application.IsMouseActive]"/>
            </Params>
          </DebugTrace>
          <Set Target="[ScrollData.BeginPadding]" Value="-192" />
          <Set Target="[ScrollData.EndPadding]" Value="52" />
          <Set Target="[ScrollData.EndPaddingRelativeTo]" Value="Far" />
          <!--Set Target="[ScrollData.LockedPosition]" Value="-1" /-->
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="false"/>
        </Conditions>
        <Actions>
          <DebugTrace Message="ISMOUSEACTIVE: {0}">
            <Params>
              <ObjectPath ObjectPath="[Application.IsMouseActive]"/>
            </Params>
          </DebugTrace>
          <Set Target="[ScrollData.BeginPadding]" Value="0" />
          <Set Target="[ScrollData.EndPadding]" Value="370" />
          <Set Target="[ScrollData.EndPaddingRelativeTo]" Value="Near" />
          <!--Set Target="[ScrollData.LockedPosition]" Value=".1" /-->
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Application.IsMouseActive]" Value="false"/>
          <IsValid Source="[Page]"/>
          <IsValid Source="[Page!shell:GalleryPage.SelectedItemCommand]"/>
          <!--IsType Source="[Page!shell:GalleryPage.SelectedItemCommand]" Type="shell:GalleryItem"/-->
        </Conditions>
        <Actions>
          <DebugTrace Message="SECONDISMOUSEACTIVE: {0}">
            <Params>
              <ObjectPath ObjectPath="[Application.IsMouseActive]"/>
            </Params>
          </DebugTrace>
          <!--Invoke Target="[AreaOfInterestHelper.RequestFocus]" Panel="[Page!shell:GalleryPage.SelectedItemCommand]" InvokePolicy="AsynchronousLowPri"/-->
          <!--Invoke Target="[Page!shell:GalleryPage.SelectedItemCommand.NavigateInto]"/-->
          <!--Invoke Target="[Repeater.NavigateIntoIndex]" index="0" /-->
          <!--Invoke Target="[Repeater.NavigateIntoIndex]" index="[SelectedIndex.Value]" >
            <Transformer>
              <MathTransformer Add="1"/>
            </Transformer>
          </Invoke-->
        </Actions>
      </Rule>
      <!-- Change scroll disposition when the mouse is active. -->
      <!--Rule>
              <Conditions>
                <Equality Source="[Environment.IsMouseActive]" Value="true"/>
                <Equality Source="[AutoScrollRegionActive.Value]" Value="false"/>
              </Conditions>
              <Actions>
                <Set Target="[ScrollData.ScrollIntoViewDisposition]" Value="[MouseScrollDisposition]"/>
              </Actions>
            </Rule-->
      <!-- 
                When the autoscroll region becomes active, we want to lock the focus 
                position wherever it currently is within the gallery.  CenterLockTransformer
                calculates what the current center locked position would be, and it gets set
                on the ScrollIntoViewDisposition used for scrolling when the autoscroll regions
                are active.
            -->
      <!--Rule>
                <Conditions>
                    <Equality Source="[AutoScrollRegionActive.Value]" Value="true"/>
                </Conditions>
                <Actions>
                    <Set Target="[AutoScrollDisposition.LockedPosition]" Value="[Scroller]">
                        <Transformer>
                            <shell:CenterLockTransformer Orientation="Horizontal" InterestId="Focus"/>
                        </Transformer>
                    </Set>
                    <Set Target="[ScrollData.ScrollIntoViewDisposition]" Value="[AutoScrollDisposition]"/>
                </Actions>
            </Rule-->
      <!-- If none of these criteria are met, lock the scroller. -->
      <!--Default Target="[ScrollData.ScrollIntoViewDisposition]" Value="[DefaultScrollDisposition]"/-->


      <!-- Incremental scroll up/down -->
      <Changed Source="[ScrollDownCommand.Invoked]">
        <Actions>
          <Invoke Target="[ScrollData.ScrollDown]"/>
        </Actions>
      </Changed>
      <Changed Source="[ScrollUpCommand.Invoked]">
        <Actions>
          <Invoke Target="[ScrollData.ScrollUp]"/>
        </Actions>
      </Changed>

      <!-- Tell the scrolling state which ViewItem to talk to. -->
      <!--Binding Source="[Scroller]" Target="[ScrollData.TargetViewItem]"/-->

      <!--Default Target="[ScrollData.FocusHelper]" Value="[FocusOrderHelper]"/-->

      <!-- 
            +
            +    Scrolling
            +
            -->

      <!--
                ... And when we're not grouped, we need to use the selected *index* instead
            -->
      <!--Rule>
                <Conditions>
                    <Equality Source="[IsGrouped.Value]" Value="false"/>
                    <IsValid Source="[SelectedIndex.Value]"/>
                </Conditions>
                <Actions>
                    <Set Target="[FocusOrderHelper.SetAreaOfInterestOnRepeatedItem]" Value="true"/>
                    <Set Target="[FocusOrderHelper.RequestFocusIndex]" Value="[SelectedIndex.Value]"/>
                </Actions>
            </Rule-->

      <!-- 
                If we are grouped, we want the previously selected *group* to be the important one
                who gets created specially and scrolled into view...
            -->
      <!--Rule>
                <Conditions>
                    <Equality Source="[IsGrouped.Value]" Value="true"/>
                    <IsValid Source="[SelectedGroup.Value]"/>
                </Conditions>
                <Actions>
                    <Set Target="[FocusOrderHelper.RequestFocusIndex]" Value="[SelectedGroup.Value]"/>
                </Actions>
            </Rule-->

      <!--
                If we're not grouped, we're responsible for setting the "total count" value so that the 
                browse page can put the correct number on its counter
            -->
      <Rule>
        <Conditions>
          <Equality Source="[IsGrouped.Value]" Value="false"/>
          <IsValid Source="[Model.Content.Count]"/>
        </Conditions>
        <Actions>
          <Set Target="[TotalCount.Value]" Value="[Model.Content.Count]"/>
        </Actions>
      </Rule>

      <!--
                If there's content in the list, tell the focus order helper to sync his request focus index
                index with the Repeater's essential index.  This way, we're sure that the selected guy will
                get repeated.
            -->
      <!--Rule>
                <Conditions>
                    <IsValid Source="[Model.Content.Count]"/>
                    <Equality Source="[Model.Content.Count]" Value="0" ConditionOp="GreaterThan"/>                
                </Conditions>
                <Actions>
                    <Set Target="[FocusOrderHelper.SetEssentialIndexOnRepeater]" Value="true"/>
                </Actions>
            </Rule-->
      <!--Default Target="[FocusOrderHelper.SetEssentialIndexOnRepeater]" Value="false"/-->

      <Default Target="[TotalCount.Value]" Value="0"/>
      <Default Target="[TotalCountOverride.Value]" Value="0"/>
      <Default Target="[ItemIndexOverride.Value]" Value="0"/>
      <!--Default Target="[FocusOrderHelper.Repeater]" Value="[Repeater]"/-->

      <!-- Hook up the RepeatHelper. -->
      <!--Default Target="[Repeater.RepeatedItem]" Value="[RepeatHelper.RepeatedHandler]"/>
            <Default Target="[Repeater.PreRepeatHandler]" Value="[RepeatHelper.ContentTypeHandler]"/-->

      <!-- Sets the listview strips to visible and invisible -->
      <Changed Source="[ShowListViewStrip]">
        <Actions>
          <Set Target="[ListViewStripTop.Visible]" Value="[ShowListViewStrip]"/>
          <Set Target="[ListViewStripBottom.Visible]" Value="[ShowListViewStrip]"/>
        </Actions>
      </Changed>
      <Changed Source="[Application]" InitialEvaluate="true">
        <Actions>
          <Invoke Target="[Application.FixRepeatRate]" scroller="[ScrollerGrid]" val ="185" />
        </Actions>
      </Changed>
      <Default Target="[IsListView.Value]" Value="false"/>
      <Default Target="[MetadataDelay.Value]" Value="[MetadataDelayTime]"/>

      <!-- By default, assume we're not grouped.  GroupedGalleries will set this to true to let us know -->
      <Default Target="[IsGrouped.Value]" Value="false"/>


      <!-- Accessibility -->
      <Default Target="[Accessible.Role]" Value="List"/>
    </Rules>

    <Content>

      <Panel Name="GalleryPanel" Padding="[GalleryPadding]">
        <Layout>
          <AnchorLayout SizeToHorizontalChildren="false"/>
        </Layout>
        <Children>
          <wait:WaitCursorHost Name="WaitCursor" Visible="false" Margins="-224,0,0,0"/>
          <Graphic Name="ListViewStripTop" Content="image://me:Browse.ListViewStripTop" Visible="false">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 0, -224" Top="[TopStripTopEdge]" Right="Parent, 1" Bottom="[TopStripBottomEdge]"
                                 ContributesToHeight="false" ContributesToWidth="false" />
            </LayoutInput>
            <Animations>
              <Animation Animation="animation://me:Browse.Gallery.Strip.NavigateAway"/>
            </Animations>
          </Graphic>

          <Graphic Name="ListViewStripBottom" Content="image://me:Browse.ListViewStrip" Visible="false">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 0, -224" Top="[BottomStripTopEdge]" Right="Parent, 1" Bottom="[BottomStripBottomEdge]"
                                 ContributesToHeight="false" ContributesToWidth="false" />
            </LayoutInput>
            <Animations>
              <Animation Animation="animation://me:Browse.Gallery.Strip.NavigateAway"/>
            </Animations>
          </Graphic>

          <ctl:AutoScrollRegion ScrollData="[ScrollData]" ScrollCommand="[ScrollUpCommand]" ClickCommand="[PageUpCommand]" LayoutPosition="Left"
                                          MaximumSize="[AutoScrollSize]" AutoScrollRegionActive="[AutoScrollRegionActive]"
                                          DelayInterval="[DelayInterval]" ScrollInterval="[ScrollInterval]">
            <LayoutInput>
              <AnchorLayoutInput Left="Scroller, 0, -224" ContributesToHeight="false" />
            </LayoutInput>
          </ctl:AutoScrollRegion>

          <ctl:AutoScrollRegion ScrollData="[ScrollData]" ScrollCommand="[ScrollDownCommand]" ClickCommand="[PageDownCommand]" LayoutPosition="Right"
                                MaximumSize="[AutoScrollSize]" AutoScrollRegionActive="[AutoScrollRegionActive]"
                                DelayInterval="[DelayInterval]" ScrollInterval="[ScrollInterval]">
            <LayoutInput>
              <AnchorLayoutInput Right="Parent, 1" ContributesToHeight="false"/>
            </LayoutInput>
          </ctl:AutoScrollRegion>

          <!-- Jump in list -->
          <me:JumpControl Name="JILdisplay" Content="[Page.JILtext.Value]" Pivot="[Model]" NavigateIntoContent="[NavigateIntoContent]">
            <LayoutInput>
              <AnchorLayoutInput Right="Parent, 1, -100" Bottom="[JILVerticalAnchor]" ContributesToWidth="false" ContributesToHeight="false"/>
            </LayoutInput>
          </me:JumpControl>

          <!-- Scrolling content -->
          <!-- @ the secret is margins -->
          <Panel Name="Scroller" Layout="HorizontalFlow" Margins="0,0,0,0">
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
            </LayoutInput>
            <Children>

              <!-- @ the scroller needs focus padding? -->
              <!--Scroller MouseInteractive="false" Name="ScrollerGrid" Orientation="Horizontal" MaximumSize="0,0" ScrollingData="[ScrollData]" Prefetch="1.0" FocusPadding="0" Margins="0,0,0,0" Navigation="FlowVertical"-->
              <Scroller MouseInteractive="false" Name="ScrollerGrid" Orientation="Horizontal" MaximumSize="0,0" ScrollingData="[ScrollData]" FocusPadding="0" Margins="0,0,0,0" Navigation="FlowHorizontal" Prefetch="1.5">
                <Children>
                  <!-- @ -->
                  <!--Repeater MouseInteractive="false" Name="Repeater" ContentName="[Model.ContentItemTemplate]" Layout="[FlowLayout]" DiscardOffscreenVisuals="true" Navigation="PreferFocusOrder,FlowVertical"-->
                  <Repeater MouseInteractive="false" Name="Repeater" ContentName="[Model.ContentItemTemplate]" Layout="[FlowLayout]" Navigation="RememberFocus,FlowVertical" DiscardOffscreenVisuals="false">
                    <Animations>
                      <Animation Animation="[MoveAnimation]"/>
                    </Animations>
                  </Repeater>
                </Children>
              </Scroller>
            </Children>
          </Panel>

          <!-- Content Underlay -->
          <me:ContentUnderlay Name="ContentUnderlay" Model="[Model]" Layout="Fill" Visible="false">
            <LayoutInput>
              <AnchorLayoutInput Left="Scroller, 0" Right="Scroller, 1" Top="Scroller, 0" Bottom="Scroller, 1"/>
            </LayoutInput>
          </me:ContentUnderlay>
          <Text Name="xJILdisplay" Content="[Page.JILtext.Value]" Font="Arial,12" Color="White" Alpha=".75">
            <LayoutInput>
              <FormLayoutInput Right="Parent,1" Bottom="Parent,1"/>
            </LayoutInput>
          </Text>
        </Children>
      </Panel>

    </Content>

    <Content Name="Item">
      <me:Switcher Page="[Page]" Application="[Application]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]" Source="@resx://Library/Library.Resources/V3_Controls_BrowseGalleryItem#oneRowGalleryItemPoster"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:Switcher>
    </Content>

    <Content Name="oneRowGalleryItemPoster">
      <me:MovieOneRowGalleryItemPoster OverlayContentTemplate="[RepeatedItem!shell:GalleryItem.OverlayContentTemplate]" Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:MovieOneRowGalleryItemPoster>
    </Content>

    <Content Name="GalleryGroup">
      <me:GalleryGroup Page="[Page]" Application="[Application]" Model="[RepeatedItem!shell:BrowseGroup]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      MyIndex="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" Pivot="[Model]" SelectedGroup="[SelectedGroup]" SelectedIndex="[SelectedIndex]">
      </me:GalleryGroup>
    </Content>

    <Content Name="ListViewGroup">
      <me:ListViewGroup Page="[Page]" Application="[Application]" Model="[RepeatedItem!shell:BrowseGroup]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      MyIndex="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" Pivot="[Model]" SelectedGroup="[SelectedGroup]" SelectedIndex="[SelectedIndex]">
      </me:ListViewGroup>
    </Content>
    
    <Content Name="twoRowGalleryItemPoster">
      <me:MovieTwoRowGalleryItemPoster OverlayContentTemplate="[RepeatedItem!shell:GalleryItem.OverlayContentTemplate]" Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:MovieTwoRowGalleryItemPoster>
    </Content>

    <Content Name="threeRowGalleryItemPoster">
      <me:threeRowGalleryItemPoster OverlayContentTemplate="[RepeatedItem!shell:GalleryItem.OverlayContentTemplate]" Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:threeRowGalleryItemPoster>
    </Content>
    
    <Content Name="fiveRowGalleryItem">
      <me:fiveRowGalleryItem Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:fiveRowGalleryItem>
    </Content>

    <Content Name="ListViewItemGrouped">
      <me:ListViewItem Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]" RightContentTemplate="@resx://Library/Library.Resources/V3_Controls_BrowseListViewItem#RecordedTVListViewItemRightBase">
      </me:ListViewItem>
    </Content>
    
    <Content Name="ListViewItem">
      <me:ListViewItem Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" 
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:ListViewItem>
    </Content>

    <Content Name="ListViewItem4x3">
      <me:ListViewItem Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]" LeftContentTemplate="@resx://Library/Library.Resources/V3_Controls_BrowseListViewItem#RecordedTVListViewItemThumbnail">
      </me:ListViewItem>
    </Content>

    <Content Name="ListViewItemPoster">
      <me:ListViewItem Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]" LeftContentTemplate="@resx://Library/Library.Resources/V3_Controls_BrowseListViewItem#MovieListViewItemThumbnail">
      </me:ListViewItem>
    </Content>
    
    <Content Name="twoRowGalleryItemGenre">
      <me:twoRowGenreItem Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:twoRowGenreItem>
    </Content>

    <Content Name="oneRowGalleryItem4x3">
      <me:oneRowGalleryItem4x3 Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:oneRowGalleryItem4x3>
    </Content>

    <Content Name="oneRowGalleryItem4x3NoDetails">
      <me:oneRowGalleryItem4x3NoDetails Application="[Application]" Page="[Page]" Model="[RepeatedItem!ICommand]" SelectionPolicy="[Model.ContentSelectionPolicy]"
                      Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]">
      </me:oneRowGalleryItem4x3NoDetails>
    </Content>

    <!--Content Name="GroupItem">
      <me:GalleryGroup Model="[RepeatedItem!shell:IBrowseGroup]" Pivot="[Model]" ContentItemTemplate="[ContentItemTemplate]"
                       SelectedGroup="[SelectedGroup]" SelectedIndex="[SelectedIndex]" MyIndex="[RepeatedItemIndex]" ItemProperties="[ItemProperties]">
      </me:GalleryGroup>
    </Content-->

  </UI>


  <UI Name="GroupedGallery" BaseUI="me:Gallery">
    <Properties>
      <!-- We have variable size items, so we need to use a flow layout -->
      <!--FlowLayout Name="FlowLayout" Orientation="Horizontal" Spacing="0, 0" Repeat="WhenTooBig" RepeatGap="70, 0" MissingItemPolicy="SizeToAverage" MinimumSampleSize="3" StopOnEmptyItem="true"/-->
      <FlowLayout Name="FlowLayout" Orientation="Horizontal" Spacing="0, 0" Repeat="WhenTooBig" RepeatGap="70, 0" MissingItemPolicy="SizeToAverage" MinimumSampleSize="3"/>
      <cor:Boolean Name="DiscardOffscreenVisuals" Boolean="true"/>
    </Properties>

    <!--Locals>
            <shell:GroupedGalleryRepeaterFocusHelper Name="FocusOrderHelper"/>
        </Locals-->

    <Rules>
      <Default Target="[IsGrouped.Value]" Value="true"/>
      <!--Default Target="[FocusOrderHelper.SelectedGroup]" Value="[SelectedGroup]"/-->
    </Rules>
  </UI>


  <UI Name="ContentUnderlay">
    <Properties>
      <shell:IBrowsePivot Name="Model" shell:IBrowsePivot="$Required"/>
    </Properties>

    <Content>
      <Panel/>
    </Content>
  </UI>

  <UI Name="Switcher">
    <Properties>
      <!-- @ -->
      <omlShell:OMLApplication Name="Application" OMLApplication="$Required"/>
      <shell:GalleryPage Name="Page"/>
      <Size       Name="ThumbSize"        Size="136, 191"/>
      <Image      Name="NoThumbnailImage" Image="resx://Library/Library.Resources/V3_Controls_BrowseGalleryItem_NoImage2RowPoster"/>
      <cor:Int32  Name="NumberOfRows"     Int32="2"/>
      <cor:Single Name="RippleDelay"      Single="0.015"/>
      <!-- @ -->
      <ICommand         Name="Model"           ICommand="$Required"/>
      <shell:ISelectionPolicy Name="SelectionPolicy" ISelectionPolicy="$Required"/>
      <Index            Name="Index"           Index="$Required"/>
      <PropertySet      Name="ItemProperties"  PropertySet="$Required"/>
      <PropertySet      Name="GroupProperties" PropertySet="$Required"/>

      <Font Name="GalleryItemLabel"             FontName="global://comm:RegularFontFace" FontSize="16"/>
      <Font Name="GalleryItemOverlayLabel"      FontName="global://comm:RegularFontFace" FontSize="16"/>
      <Font Name="GalleryItemOverlayLabelFocus" FontName="global://comm:RegularFontFace" FontSize="16"/>

      <Size         Name="TileSize"          Size="0, 0"/>
      <Size         Name="LabelTileSize"     Size="0, 0"/>
      <cor:Boolean  Name="LabelWordWrap"     Boolean="false"/>
      <cor:Boolean  Name="ShowLabel"         Boolean="false"/>
      <cor:Boolean  Name="ShowOverlayLabel"  Boolean="true"/>
      <Inset        Name="ItemPadding"       Inset="0, 0, 0, 0"/>
      <cor:Boolean  Name="ThumbAspectRatio"  Boolean="false"/>
      <cor:Boolean  Name="OverlayWordWrap"   Boolean="true"/>
      <cor:Boolean  Name="OverlayLabelTransform"   Boolean="true"/>

      <cor:Int32    Name="ItemMetaDataTopOffset"    Int32="0"/>
      <cor:Int32    Name="ItemMetaDataLeftOffset"   Int32="0"/>
      <cor:Int32    Name="ItemGalleryContentOffset" Int32="0"/>

      <Color        Name="BGColor"           Color="color://comm:GalleryItemFill" />
      <Color        Name="LabelColor"        Color="color://comm:LightBlue"/>
      <Color        Name="OverlayLabelColor" Color="color://comm:GalleryItemLabel"/>

      <Vector3      Name="NoFocusScale" Vector3="1.0, 1.0, 1.0"/>
      <Vector3      Name="FocusScale"   Vector3="1.26, 1.26, 1.0"/>
      <cor:Single   Name="FocusAlpha"   Single="1.0"/>
      <cor:Single   Name="NoFocusAlpha" Single="0.85"/>

      <cor:String   Name="OverlayContentTemplate"   String="null"/>
      <cor:String   Name="UnderlayContentTemplate"  String="null"/>

      <cor:Boolean  Name="AllowSelectAnimation"     Boolean="false"/>
      <cor:Boolean  Name="IsOneRowGalleryItem"      Boolean="false"/>

      <shell:AreaOfInterestLayoutInput Name="AreaOfInterest" Id="Focus"/>
    </Properties>
  </UI>
  <!-- This is at the end so it won't break the Intellisense parsing -->
  <GridLayout Name="GalleryDefaultLayout" Orientation="Vertical" AllowWrap="true" Spacing="2, 2" Repeat="WhenTooBig" RepeatGap="70"/>
  <GridLayout Name="ListViewDefaultLayout" Orientation="Vertical" AllowWrap="true" Spacing="50, 2" Repeat="WhenTooBig" RepeatGap="200"/>
</Mcml>
