<?xml version="1.0" encoding="utf-8" ?>
<Mcml xmlns ="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor ="assembly://MsCorLib/System"
    xmlns:comm="resx://Library/Library.Resources/V3_Globals"
    xmlns:shl ="assembly://Library/Library.Code.V3"
    xmlns:me ="Me">

  <UI Name="TestButton">
    <Properties>
      <Command Name="SampleButton1" Description="Cast + More"/>
      <Command Name="SampleButton2" Description="Record"/>
      <Command Name="SampleButton3" Description="Advanced Record srgeg egege egetg"/>
      <Command Name="SampleButton4" Description="Other Showings"/>
    </Properties>
    <Content>
      <Panel Layout="Center">
        <Children>
          <Panel Layout="VerticalFlow">
            <Children>
              <me:Button Model="[SampleButton1]" TileSize="590,51" />
              <me:Button Model="[SampleButton2]"/>
              <me:Button Model="[SampleButton3]"/>
              <me:Button Model="[SampleButton4]"/>
            </Children>
          </Panel>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="Button" BaseUI="me:ButtonBase">
    <Properties>
      <cor:Boolean    Name="KeyInteractive" Boolean="true"/>
      <ICommand       Name="Model" ICommand="$Required"/>
      <cor:String     Name="AccessibilityName" String="null"/>
      <cor:String     Name="AccessibilityDesc" String="null"/>
      <AccessibleRole Name="AccessibilityRole" AccessibleRole="PushButton"/>
    </Properties>
    <Rules>
      <Binding Target="[Accessible.IsUnavailable]" Source="[Model.Available]" >
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>
      <Binding Target="[Accessible.IsPressed]" Source="[Clicker.Clicking]"/>
      <Binding Target="[Accessible.IsFocusable]" Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]" Source="[Input.KeyFocus]"/>
      <Binding Target="[Accessible.Description]" Source="[AccessibilityDesc]"/>
      <Default Target="[Accessible.DefaultActionCommand]" Value="[Model]"/>
      <Default Target="[Accessible.DefaultAction]" Value="Button"/>
      <Default Target="[Accessible.Role]" Value="[AccessibilityRole]"/>
      <Default Target="[Clicker.Command]" Value="[Model!ICommand]"/>
      <Binding Source="[Model.Available]" Target="[Input.Enabled]"/>
      <Rule >
        <Conditions>
          <Equality Source="[AccessibilityName]" Value="null"/>
          <Modified Source="[Model.Description]" InitialEvaluate="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Accessible.Name]" Value="[Model.Description]"/>
        </Actions>
      </Rule>
      <Default Target="[Accessible.Name]" Value="[AccessibilityName]"/>
      <Binding Source="[Model.Description]" Target="[Label.Content]"/>
    </Rules>
  </UI>
  <UI Name="ButtonBase">
    <Properties>
      <EditableText      Name="SubFocusArea"               Value="none"/>
      <Color             Name="NoFocusColorActive"         Color="color://comm:OffWhite"/>
      <Color             Name="NoFocusColorInactive"       Color="color://comm:LightBlue"/>
      <Image             Name="ButtonFocus"                Image="resx://Library/Library.Resources/V3_Controls_Background_Static" Flippable="true"/>
      <Font              Name="Font"                       Font="font://comm:ButtonText"/>
      <Font              Name="FocusFont"                  Font="null"/>
      <Font              Name="DisabledFont"               Font="null"/>
      <cor:Boolean       Name="ShowLabel"                  Boolean="true"/>
      <cor:Boolean       Name="AllowPressedEffect"         Boolean="true"/>
      <cor:Boolean       Name="AllowMarquee"               Boolean="true"/>
      <Size              Name="TileSize"                   Size="250, 51"/>
      <cor:Boolean       Name="ShowLabelBackground"        Boolean="false"/>
      <Image             Name="LabelBackground"            Image="null"/>
      <Image             Name="LabelBackgroundFocus"       Image="null"/>
      <Image             Name="NoFocusImage"               Image="null"/>
      <Image             Name="FocusImage"                 Source="resx://Library/Library.Resources/V3_Controls_Common_Button_Left_Focus" NineGrid="5,5,5,5"/>
      <Image             Name="DisabledImage"              Image="null"/>
      <Image             Name="FocusOverlayImage"          Image="resx://Library/Library.Resources/V3_Controls_Common_Button_Left_Focus_Overlay"/>
      <Image             Name="PressedImage"               Image="resx://Library/Library.Resources/V3_Controls_Common_Button_Pressed_Highlight"/>
      <Color             Name="NoFocusColor"               Color="color://comm:LightBlue"/>
      <Color             Name="FocusColor"                 Color="color://comm:OffWhite"/>
      <Color             Name="DisabledColor"              Color="color://comm:LightBlue40Percent"/>
      <Color             Name="NoFocusFillColor"           Color="color://comm:Transparent"/>
      <Color             Name="FocusFillColor"             Color="color://comm:Transparent"/>
      <Color             Name="DisabledFillColor"          Color="color://comm:Transparent"/>
      <Inset             Name="LabelMargins"               Inset="global://comm:StandardButtonTextMargins"/>
      <DockLayoutInput   Name="LabelBorderInput"           Position="Left" Alignment="Center"/>
      <AnchorLayoutInput Name="LabelBackgroundLayoutInput" Left="PressedGradient,0,-8" Top="PressedGradient,0,-4" Right="PressedGradient,1,8" Bottom="PressedGradient,1,4" ContributesToWidth="false" ContributesToHeight="false"/>
      <cor:Boolean       Name="ShowIcon"                   Boolean="true"/>
      <Image             Name="IconImage"                  Image="null"/>
      <Image             Name="FocusIconImage"             Image="null"/>
      <Image             Name="IconAcquiringImage"         Image="null"/>
      <Image             Name="IconErrorImage"             Image="null"/>
      <Size              Name="IconMinSize"/>
      <Size              Name="IconMaxSize"/>
      <Inset             Name="IconPadding"/>
      <DockLayoutInput   Name="IconBorderInput"            Position="Left" Alignment="Center"/>
      <cor:String        Name="FocusLoopContentTemplate"   String="null"/>
      <cor:Boolean       Name="IsNavigatingCommand"        Boolean="true"/>
      <Sound             Name="DefaultNavigationSound"     Sound="resx://Library/Library.Resources/V3_Controls_Common_Select_a" />
      <Sound             Name="DefaultNonNavigationSound"  Sound="resx://Library/Library.Resources/V3_Controls_Common_MiniSelect_a" />
    </Properties>
    <Locals>
      <ClickHandler Name="Clicker"/>
    </Locals>
    <Rules>
      <Binding Target="[Accessible.IsFocusable]" Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]" Source="[Input.KeyFocus]"/>
      <Rule>
        <Conditions>
          <Modified Source="[Clicker.Invoked]"/>
          <Equality Source="[IsNavigatingCommand]" Value="true"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="[DefaultNavigationSound]" />
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[Clicker.Invoked]"/>
          <Equality Source="[IsNavigatingCommand]" Value="false"/>
        </Conditions>
        <Actions>
          <PlaySound Sound="[DefaultNonNavigationSound]" />
        </Actions>
      </Rule>
      <Condition Source="[Input.Enabled]" SourceValue="false" Target="[Label.Color]" Value="[DisabledColor]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Label.Color]" Value="[FocusColor]"/>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
          <Equality Source="[FocusLoopContentTemplate]" ConditionOp="NotEquals" Value="null"/>
        </Conditions>
        <Actions>
          <Set Target="[IconFocusLoopHost.Visible]" Value="true"/>
          <Set Target="[IconFocusLoopHost.Source]" Value="[FocusLoopContentTemplate]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
          <Equality Source="[FocusIconImage]" ConditionOp="NotEquals" Value="null"/>
        </Conditions>
        <Actions>
          <Set Target="[Icon.Content]" Value="[FocusIconImage]"/>
        </Actions>
      </Rule>
      <Binding Source="[IconErrorImage]" Target="[Icon.ErrorImage]"/>
      <Binding Source="[IconAcquiringImage]" Target="[Icon.AcquiringImage]"/>
      <Binding Source="[IconImage]" Target="[Icon.Content]"/>
      <Default Target="[Icon.Content]" Value="[IconImage]"/>
      <Rule>
        <Conditions>
          <Equality Source="[Input.Enabled]" Value="false"/>
          <Equality Source="[DisabledFont]" ConditionOp="NotEquals" Value="null"/>
        </Conditions>
        <Actions>
          <Set Target="[Label.Font]" Value="[DisabledFont]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
          <Equality Source="[FocusFont]" ConditionOp="NotEquals" Value="null"/>
        </Conditions>
        <Actions>
          <Set Target="[Label.Font]" Value="[FocusFont]"/>
        </Actions>
      </Rule>
      <Condition Source="[Input.Enabled]" SourceValue="false" Target="[Background.Content]" Value="[DisabledImage]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Background.Content]" Value="[FocusImage]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="false" Target="[BackgroundUnderlay.Visible]" Value="true"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[BackgroundUnderlay.Visible]" Value="false"/>
      <Condition Source="[Input.Enabled]" SourceValue="false" Target="[Fill.Content]" Value="[DisabledFillColor]"/>
      
      <Condition Source="[Input.KeyFocus]" SourceValue="false" Target="[Label.HasFocus]" Value="false"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Label.HasFocus]" Value="true"/>
      
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Fill.Content]" Value="[FocusFillColor]"/>
          <PlaySound Sound="resx://Library/Library.Resources/V3_Controls_Common_Focus_a" />
        </Actions>
      </Rule>
      <Binding Source="[Input.KeyFocus]" Target="[FocusOverlay.Visible]"/>
      <Binding Source="[Clicker.Clicking]" Target="[Highlight.Visible]"/>
      <Binding Source="[TileSize]" Target="[Root.MaximumSize]"/>
      <Binding Source="[TileSize]" Target="[Fill.MinimumSize]"/>
      <Binding Source="[TileSize]" Target="[Background.MinimumSize]"/>
      <Default Target="[LabelBackgroundFocus]" Value="[ButtonFocus]" />

      <Changed Source="[SubFocusArea.Value]">
        <Conditions>
          <Equality Source="[SubFocusArea.Value]" Value="NoFocusColorInactive"/>
        </Conditions>
        <Actions>
          <Set Target="[NoFocusColor]" Value="[NoFocusColorInactive]"/>
          <Set Target="[Label.Color]" Value="[NoFocusColor]"/>
          <DebugTrace Message="INTERNALSubFocusArea.Value: {0}">
            <Params>
              <ObjectPath ObjectPath="[SubFocusArea.Value]"/>
            </Params>
          </DebugTrace>
        </Actions>
      </Changed>
      
      <Changed Source="[SubFocusArea.Value]">
        <Conditions>
          <Equality Source="[SubFocusArea.Value]" Value="NoFocusColorActive"/>
        </Conditions>
        <Actions>
          <Set Target="[NoFocusColor]" Value="[NoFocusColorActive]"/>
          <Set Target="[Label.Color]" Value="[NoFocusColor]"/>
          <DebugTrace Message="INTERNALSubFocusArea.Value: {0}">
            <Params>
              <ObjectPath ObjectPath="[SubFocusArea.Value]"/>
            </Params>
          </DebugTrace>
        </Actions>
      </Changed>
    </Rules>
    <Content>
      <Panel Name="Root" MouseInteractive="true">
        <Children>
          <Panel Name="LabelScalePanel" Layout="Dock">
            <Children>
              <Graphic Name="Icon" LayoutInput="[IconBorderInput]" Margins="[IconPadding]" MaintainAspectRatio="true" MinimumSize="[IconMinSize]" MaximumSize="[IconMaxSize]" Visible="[ShowIcon]">
                <Children>
                  <me:BaseIconFocusLoopContent Name="IconFocusLoopHost" Visible="false" Source="null"/>
                </Children>
              </Graphic>
              <Panel Name="LabelPanel" Layout="Anchor" LayoutInput="[LabelBorderInput]" Margins="[LabelMargins]" Visible="[ShowLabel]">
                <Children>
                  <Graphic Name="PressedGradient" SizingPolicy="SizeToChildren">
                    <LayoutInput>
                      <AnchorLayoutInput Vertical="Center" Horizontal="Near"/>
                    </LayoutInput>
                    <Children>
                      <me:FancyText AvailableSpaceInt="[TileSize.Width]" HasFocus="false" AllowMarquee="[AllowMarquee]" Name="Label" Color="[NoFocusColor]" Font="[Font]"/>
                    </Children>
                  </Graphic>
                  <Graphic Name="LabelBackgroundGraphic" Content="[LabelBackground]" Visible="[ShowLabelBackground]" Layout="Fill" />
                </Children>
              </Panel>
            </Children>
          </Panel>
          <Clip FadeSize="20" Layout="LegacyFill">
            <Children>
              <Graphic Name="Highlight" Content="[PressedImage]">
                <Animations>
                  <!-- Button highlight -->
                  <TransformByAttributeAnimation Name="Button.PressedHighlight.Show" Filter="Position" Attribute="Width" Magnitude="1.0">
                    <Source>
                      <Animation Type="Show">
                        <Keyframes>
                          <PositionKeyframe Time="0.00" Value="-1.0,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.10" Value="0.00,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.18" Value="0.35,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.35" Value="0.55,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.60" Value="1.25,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.70" Value="1.25,0,0" RelativeTo="Final"/>

                          <AlphaKeyframe Time="0.00" Value="0.00" RelativeTo="Absolute"/>
                          <AlphaKeyframe Time="0.05" Value="0.75" RelativeTo="Absolute"/>
                          <AlphaKeyframe Time="0.17" Value="0.75" RelativeTo="Absolute"/>
                          <AlphaKeyframe Time="0.40" Value="0.00" RelativeTo="Absolute"/>
                        </Keyframes>
                      </Animation>
                    </Source>
                  </TransformByAttributeAnimation>

                  <!-- Button highlight - stop -->
                  <TransformByAttributeAnimation Name="Button.PressedHighlight.Hide" Filter="Position" Attribute="Width" Magnitude="1.0">
                    <Source>
                      <Animation Type="Hide">
                        <Keyframes>
                          <PositionKeyframe Time="0.00" Value="0.0,0,0" RelativeTo="Current"/>
                          <PositionKeyframe Time="0.10" Value="1.0,0,0" RelativeTo="Final"/>

                          <AlphaKeyframe Time="0.00" RelativeTo="Current"/>
                          <AlphaKeyframe Time="0.10" Value="0.0" RelativeTo="Absolute"/>
                        </Keyframes>
                      </Animation>
                    </Source>
                  </TransformByAttributeAnimation>
                </Animations>
              </Graphic>
            </Children>
          </Clip>
          <Graphic Name="FocusOverlay" Layout="Fill" Content="[FocusOverlayImage]">
            <Animations>
              <Animation Animation="animation://comm:Button.FocusOverlay.Idle"/>
            </Animations>
          </Graphic>
          <ColorFill Name="Fill" Layout="Fill" Content="[NoFocusFillColor]"/>
          <Graphic Name="Background" Layout="Fill" Content="[NoFocusImage]">
          </Graphic>
          <Graphic Name="BackgroundUnderlay" Layout="Fill" Content="[LabelBackground]" Visible="false"/>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="BaseIconFocusLoopContent"></UI>
  <UI Name="FancyText">
    <Properties>
      <Font        Name="Font"              Font="font://comm:ButtonText"/>
      <Color       Name="Color"             Color="color://comm:OffWhite"/>
      <cor:String  Name="Content"           String="This text will marquee scroll across the screen slowly." />
      <cor:Int32   Name="AvailableSpaceInt" Int32="250" />
      <cor:Boolean Name="AllowMarquee"      Boolean="true"/>
      <cor:Boolean Name="HasFocus"          Boolean="false"/>
    </Properties>
    <Locals>
      <shl:FancyTextHelper Name="FancyTextHelper"/>
      <cor:Single Name="AvailableSpace" />
    </Locals>
    <Rules>
      <Rule>
        <Conditions>
          <Equality Source="[AllowMarquee]" ConditionOp="Equals" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[FancyTextHelper.MaximumWidthInt]" Value="[AvailableSpaceInt]"/>
          <Set Target="[AvailableSpace]" Value="[FancyTextHelper.MaximumWidth]"/>
          <Set Target="[FancyLabel.AvailableSpace]" Value="[FancyTextHelper.MaximumWidth]"/>
          <Invoke Target="[FancyLabel.ForceRefresh]"/>
          <Set Target="[FancyTextHelper.Content]" Value="[Content]"/>
          <Set Target="[FancyTextHelper.FontName]" Value="[Font.FontName]"/>
          <Set Target="[FancyTextHelper.FontSize]" Value="[Font.FontSize]"/>
          <Set Target="[FancyTextHelper.FontStyle]" Value="[Font.FontStyle]"/>
        </Actions>
      </Rule>
      <Changed Source="[HasFocus]">
        <Conditions>
          <Equality Source="[HasFocus]" Value="true"/>
          <Equality Source="[AllowMarquee]" ConditionOp="Equals" Value="true"/>
          <Equality Source="[FancyTextHelper.ShouldScroll]" ConditionOp="Equals" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Label.Visible]" Value="false"/>
          <Set Target="[FancyLabel.Visible]" Value="true"/>
        </Actions>
      </Changed>
      <Default Target="[Label.Visible]" Value="true"/>
      <Default Target="[FancyLabel.Visible]" Value="false"/>
    </Rules>
    <Content>
      <Scroller Orientation="Horizontal" FadeSize="-2" Margins="2,0,2,0" >
        <Children>
          <Text Name="Label" Color="[Color]" Font="[Font]" Content="[Content]"/>
          <me:FancyTextAnimated Visible="false" AvailableSpace="[AvailableSpace]" Name="FancyLabel" Color="[Color]" Font="[Font]" Content="[Content]"/>
        </Children>
      </Scroller>
    </Content>
  </UI>
  <UI Name="FancyTextAnimated">
    <Properties>
      <Font       Name="Font"           Font="font://comm:ButtonText"/>
      <Color      Name="Color"          Color="color://comm:OffWhite"/>
      <cor:String Name="Content"        String="This text will marquee scroll across the screen slowly." />
      <cor:Single Name="AvailableSpace" Single="250" />
    </Properties>
    <Content>
      <Text Name="Label" Color="[Color]" Font="[Font]" Content="[Content]">
        <Animations>
          <!-- Our animation will be a merger of a couple of different  -->
          <!-- components.                                              -->
          <MergeAnimation Name="FancyTextAnimation">
            <Sources>

              <!-- This is the first part of the animation, where the   -->
              <!-- text is totally still.  We don't want to have this   -->
              <!-- part time shifted like the rest.                     -->
              <Animation>
                <Keyframes>
                  <PositionKeyframe Time="0.0"/>
                  <PositionKeyframe Time="0.5"/>

                  <AlphaKeyframe Time="0.0" Value="1.0"/>
                </Keyframes>
              </Animation>

              <!-- Take our position animation and delay it by some     -->
              <!-- fraction the text size.  This ensures that varying   -->
              <!-- text lengths have a similar scroll speed.            -->
              <TransformByAttributeAnimation Attribute="Width" Delay="0.0050">
                <ValueTransformer>
                  <MathTransformer Subtract="[AvailableSpace]"/>
                </ValueTransformer>
                <Source>

                  <!-- Take our unit-vector (0 to 1) position animation -->
                  <!-- and magnify it by the width of our text content. -->
                  <TransformByAttributeAnimation Attribute="Width"
                                                 Magnitude="1.0"
                                                 Filter="Position">
                    <ValueTransformer>
                      <MathTransformer Subtract="[AvailableSpace]"/>
                    </ValueTransformer>
                    <Source>

                      <!-- The source animation is a position loop.     -->
                      <!-- Note that it doesn't include the beginning   -->
                      <!-- keyframes, because we don't want them time   -->
                      <!-- shifted.                                     -->
                      <Animation Type="Idle" Loop="-1">
                        <Keyframes>
                          <PositionKeyframe Time="0.80" Value="-1,0,0"/>
                          <PositionKeyframe Time="1.70" Value="-1,0,0"/>
                          <PositionKeyframe Time="1.75" Value="0,0,0"/>
                          <PositionKeyframe Time="2.50" Value="0,0,0"/>

                          <AlphaKeyframe Time="1.00" Value="1.0"/>
                          <AlphaKeyframe Time="1.70" Value="0.0"/>
                          <AlphaKeyframe Time="1.75" Value="0.0"/>
                          <AlphaKeyframe Time="1.95" Value="1.0"/>
                          <AlphaKeyframe Time="2.50" Value="1.0"/>
                        </Keyframes>
                      </Animation>

                    </Source>
                  </TransformByAttributeAnimation>

                </Source>
              </TransformByAttributeAnimation>

            </Sources>
          </MergeAnimation>
        </Animations>
      </Text>
    </Content>
  </UI>
</Mcml>