<Mcml
    xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:cor ="assembly://MsCorLib/System"
    xmlns:me ="Me">

  <!-- ScrollPanel -->
  <UI Name="ScrollPanel">
    <Properties>
      <cor:String Name="ScrollContent" String="$Required"/>
      <Color Name="NoFocusColor" Color="255, 151, 217, 255"/>
      <Color Name="FocusColor" Color="255, 242, 242, 242"/>
      <Font Name="Font" FontName="Segoe Media Center Semibold" FontSize="19" />
      <cor:Boolean Name="IsHidden" Boolean="false"/>
      <IntRangedValue Name="CounterHidden"/>
    </Properties>
    <Locals>
      <!-- The ScrollingHandler which reacts to user keyboard input. -->
      <!-- Turn on handing of arrow keys for scrolling (not on by    -->
      <!-- default).                                                 -->
      <!-- NOTE: HandlerStage must be "Direct" (which is default).   -->
      <ScrollingHandler Name="ScrollingHandler" HandleDirectionalKeys="true"/>

      <!-- ScrollingData contains many ways to customize how scrolling -->
      <!-- should behave. It has methods to change the current scroll  -->
      <!-- position and it also reports the position. In this case,    -->
      <!-- the default values are used for the sample.                 -->
      <ScrollingData Name="ScrollingData"/>
    </Locals>

    <!-- This is where the scrolling objects get hooked up to each     -->
    <!-- other. Default rules are a good place to do this since Rules  -->
    <!-- get run after the rest of the UI is created and ready to go.  -->
    <Rules>
      <Default Target="[CounterHidden.Value]" Value="0"/>
      <Binding Source="[ScrollMe.CounterHidden]" Target="[CounterHidden]"/>
      <!-- Give ScrollingData to ScrollingHandler. -->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Binding Source="[ScrollMe.IsHidden]" Target="[IsHidden]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[TheText.Color]" Value="[FocusColor]"/>
      <Changed Source="[Input.KeyFocus]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false"/>
          <Equality Source="[CounterHidden.Value]" Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[TheText.Color]" Value="[NoFocusColor]"/>
          <Set Target="[Input.KeyInteractive]" Value="true" />
        </Actions>
      </Changed>
      <Changed Source="[Input.KeyFocus]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false"/>
          <Equality Source="[CounterHidden.Value]" Value="1"/>
        </Conditions>
        <Actions>
          <!-- no scroller -->
          <Set Target="[TheText.Color]" Value="[FocusColor]"/>
          <Set Target="[Input.KeyInteractive]" Value="false" />
        </Actions>
      </Changed>
      <Changed Source="[CounterHidden.Value]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false"/>
          <Equality Source="[CounterHidden.Value]" Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[TheText.Color]" Value="[NoFocusColor]"/>
          <Set Target="[Input.KeyInteractive]" Value="true" />
        </Actions>
      </Changed>
      <Changed Source="[CounterHidden.Value]" InitialEvaluate="true">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="false"/>
          <Equality Source="[CounterHidden.Value]" Value="1"/>
        </Conditions>
        <Actions>
          <!-- no scroller -->
          <Set Target="[TheText.Color]" Value="[FocusColor]"/>
          <Set Target="[Input.KeyInteractive]" Value="false" />
        </Actions>
      </Changed>
    </Rules>
    <Content>
      <Panel>
        <Children>
          <Panel Layout="Form">
            <Children>
              <Scroller Name="MyScroller" Orientation="Vertical" FadeSize="10" Padding="0,0,0,10" Margins="0,0,0,10" ScrollingData="[ScrollingData]">
                <LayoutInput>
                  <FormLayoutInput Bottom="CounterHolder, 1, -50" Left="Parent,0" Top="Parent, 0"/>
                </LayoutInput>
                <Children>
                  <Panel>
                    <!-- Smooth scrolling. -->
                    <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0.0" RelativeTo="Current" Interpolation="SCurve, 0.3"/>
                          <PositionKeyframe Time="0.4" RelativeTo="Final"/>
                        </Keyframes>
                      </Animation>
                    </Animations>
                    <Children>
                      <Text Name="TheText" Content="[ScrollContent]" Color="[FocusColor]" Font="[Font]" WordWrap="true"/>
                    </Children>
                  </Panel>
                </Children>
              </Scroller>
              <Panel Name="CounterHolder" Margins="0,10,10,0">
                <LayoutInput>
                  <FormLayoutInput Bottom="Parent, 1" Right="Parent,1"/>
                </LayoutInput>
                <Layout>
                  <FlowLayout HideOffscreenItems="false" Orientation="Horizontal" ItemAlignment="Far" FillStrip="false" StripAlignment="Far"/>
                </Layout>
                <Children>
                  <me:ScrollControl CounterHidden="[CounterHidden]" Name="ScrollMe" ScrollData="[ScrollingData]"></me:ScrollControl>
                </Children>
              </Panel>
            </Children>
          </Panel>
        </Children>
      </Panel>
    </Content>
  </UI>
  
  <!-- ScrollControl -->
  <UI Name="ScrollControl">
    <Properties>
      <ScrollingData  Name="ScrollData"           ScrollingData="$Required"/>
      <cor:Boolean        Name="HideIfUnableToScroll" Boolean="true"/>
      <cor:Boolean Name="IsHidden" Boolean="false"/>
      <IntRangedValue Name="CounterHidden"/>
    </Properties>

    <Rules>
      <!-- Only show this scroll control if we are able to scroll. -->
      <Rule>
        <Conditions>
          <Equality Source="[HideIfUnableToScroll]" Value="true"/>
          <Equality Source="[ScrollData.CanScrollUp]" Value="false"/>
          <Equality Source="[ScrollData.CanScrollDown]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[Root.Visible]" Value="false"/>
          <Set Target="[CounterHidden.Value]" Value="1"/>
          <Set Target="[IsHidden]" Value="true"/>
        </Actions>
      </Rule>
      <Default Target="[Root.Visible]" Value="true"/>
      <Default Target="[CounterHidden.Value]" Value="0"/>
      <Binding Source="[ScrollData.TotalPages]" Target="[TotalPages.Content]">
        <Transformer>
          <FormatTransformer Format="{0:#.}"/>
        </Transformer>
      </Binding>
      <Binding Source="[ScrollData.CurrentPage]" Target="[CurrentPage.Content]">
        <Transformer>
          <FormatTransformer Format="{0:#.}"/>
        </Transformer>
      </Binding>
    </Rules>
    <Content>
      <Panel Name="Root" Layout="HorizontalFlow">
        <Animations>
          <!-- Standard fade in -->
          <Animation Name="StandardFade.Show" Type="Show">
            <Keyframes>
              <AlphaKeyframe Time="0.0" Value="0.0" Interpolation="SCurve" RelativeTo="Absolute"/>
              <AlphaKeyframe Time="0.5" Value="1.0" RelativeTo="Absolute"/>
            </Keyframes>
          </Animation>
          <!-- Standard fade out -->
          <Animation Name="StandardFade.Hide" Type="Hide">
            <Keyframes>
              <AlphaKeyframe Time="0.00" RelativeTo="Current" Interpolation="SCurve"/>
              <AlphaKeyframe Time="0.25" Value="0.0" RelativeTo="Absolute"/>
            </Keyframes>
          </Animation>
        </Animations>
        <Children>
          <!-- Label 
                         TODO: This should use ONE FormatTransformer with multiple arguments
                         (i.e. Format="{0:#.} of {1:#.}"
                    -->
          <!--Text Font="font://comm:ButtonText" Color="color://comm:LightBlue" Name="CurrentPage"/>
          <Text Font="font://comm:ButtonText" Color="color://comm:LightBlue" Content=" of "/>
          <Text Font="font://comm:ButtonText" Color="color://comm:LightBlue" Name="TotalPages"/-->
          <!-- hard coded fonts -->
          <Text Font="Segoe Media Center Semibold,20" Color="255, 151, 217, 255" Name="CurrentPage"/>
          <Text Font="Segoe Media Center Semibold,20" Color="255, 151, 217, 255" Content=" of "/>
          <Text Font="Segoe Media Center Semibold,20" Color="255, 151, 217, 255" Name="TotalPages"/>
          <me:ScrollUpButton ScrollData="[ScrollData]" Margins="2,0,0,0"/>
          <me:ScrollDownButton ScrollData="[ScrollData]" Margins="2,0,0,0"/>
        </Children>
      </Panel>
    </Content>
  </UI>

  <!-- ScrollControlItem -->
  <UI Name="ScrollControlItem">
    <Properties>
      <ScrollingData  Name="ScrollData"           ScrollingData="$Required"/>
      <cor:Boolean        Name="HideIfUnableToScroll" Boolean="true"/>
      <cor:Int32 Name="ItemIndex" />
      <cor:Int32 Name="TotalCount" />
    </Properties>
    <Rules>
      <!-- Only show this scroll control if we are able to scroll. -->
      <Rule>
        <Conditions>
          <Equality Source="[HideIfUnableToScroll]" Value="true"/>
          <Equality Source="[ScrollData.CanScrollUp]" Value="false"/>
          <Equality Source="[ScrollData.CanScrollDown]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[Root.Visible]" Value="false"/>
        </Actions>
      </Rule>
      <Default Target="[Root.Visible]" Value="true"/>
      <!-- set the total count -->
      <Binding Target="[TotalPages.Content]" Source="[TotalCount]">
        <Transformer>
          <FormatTransformer/>
        </Transformer>
      </Binding>
      <!-- set the current item. Add 1 since the index is zero based -->
      <Binding Target="[CurrentPage.Content]" Source="[ItemIndex]">
        <Transformer>
          <MathTransformer Add="1" Type="string"/>
        </Transformer>
      </Binding>
    </Rules>
    <Content>
      <Panel Name="Root" Layout="HorizontalFlow">
        <Animations>
          <!-- Standard fade in -->
          <Animation Name="StandardFade.Show" Type="Show">
            <Keyframes>
              <AlphaKeyframe Time="0.0" Value="0.0" Interpolation="SCurve" RelativeTo="Absolute"/>
              <AlphaKeyframe Time="0.5" Value="1.0" RelativeTo="Absolute"/>
            </Keyframes>
          </Animation>
          <!-- Standard fade out -->
          <Animation Name="StandardFade.Hide" Type="Hide">
            <Keyframes>
              <AlphaKeyframe Time="0.00" RelativeTo="Current" Interpolation="SCurve"/>
              <AlphaKeyframe Time="0.25" Value="0.0" RelativeTo="Absolute"/>
            </Keyframes>
          </Animation>
        </Animations>
        <Children>
          <!-- Label 
                         TODO: This should use ONE FormatTransformer with multiple arguments
                         (i.e. Format="{0:#.} of {1:#.}"
                    -->
          <!--Text Font="font://comm:ButtonText" Color="color://comm:LightBlue" Name="CurrentPage"/>
          <Text Font="font://comm:ButtonText" Color="color://comm:LightBlue" Content=" of "/>
          <Text Font="font://comm:ButtonText" Color="color://comm:LightBlue" Name="TotalPages"/-->
          <!-- hard coded fonts -->
          <Text Font="Segoe Media Center Semibold,20" Color="255, 151, 217, 255" Name="CurrentPage"/>
          <Text Font="Segoe Media Center Semibold,20" Color="255, 151, 217, 255" Content=" of "/>
          <Text Font="Segoe Media Center Semibold,20" Color="255, 151, 217, 255" Name="TotalPages"/>
          <me:ScrollUpButton ScrollData="[ScrollData]" Margins="2,0,0,0"/>
          <me:ScrollDownButton ScrollData="[ScrollData]" Margins="2,0,0,0"/>
        </Children>
      </Panel>
    </Content>
  </UI>

  <!-- ScrollButton -->
  <UI Name="ScrollButton">
    <Properties>
      <Size       Name="TileMaxSize"          Width="27" Height="27"/>
      <Image   Name="NoFocusImage"        Image="null"/>
      <Image   Name="FocusImage"          Image="null"/>
      <Image   Name="DisabledImage"       Image="null"/>
      <Image   Name="FocusOverlayImage"   Image="resx://Library/Library.Resources/V3_Controls_Common_Button_Left_Focus_Overlay"/>
      <Image   Name="PressedImage"        Image="resx://Library/Library.Resources/V3_Controls_Common_Button_Pressed_Highlight"/>
      <cor:Boolean Name="HideIfUnableToScroll" Boolean="true"/>
    </Properties>
    <Locals>
      <ClickHandler Name="Clicker"/>
    </Locals>
    <Rules>
      <!-- Background image -->
      <Condition Source="[Input.Enabled]"    SourceValue="false"
                 Target="[Background.Content]"    Value="[DisabledImage]"/>
      <Condition Source="[Input.MouseFocus]" SourceValue="true"
                 Target="[Background.Content]"    Value="[FocusImage]"/>
      <Binding Source="[Input.KeyFocus]"   Target="[FocusOverlay.Visible]"/>
      <Binding Source="[Clicker.Clicking]"   Target="[Highlight.Visible]"/>
      <Default Target="[Input.KeyInteractive]" Value="false"/>
    </Rules>
    <Content>
      <Panel Name="Root" MouseInteractive="true" MaximumSize="[TileMaxSize]">
        <Children>
          <!-- Highlight base -->
          <Clip Layout="Fill" FadeSize="20">
            <Children>
              <!-- Highlight -->
              <Graphic Name="Highlight" Content="[PressedImage]">
                <Animations>
                  <!-- Button highlight -->
                  <TransformByAttributeAnimation Name="Button.PressedHighlight.Show" Filter="Position" Attribute="Width" Magnitude="1.0">
                    <Source>
                      <!-- DebugID="Button.PressedHighlight.Show.Source" -->
                      <Animation Type="Show">
                        <Keyframes>
                          <PositionKeyframe Time="0.00" Value="-1.0,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.10" Value="0.00,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.18" Value="0.35,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.35" Value="0.55,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.60" Value="1.25,0,0" RelativeTo="Final"/>
                          <PositionKeyframe Time="0.70" Value="1.25,0,0" RelativeTo="Final"/>
                          <AlphaKeyframe Time="0.00" Value="0.00" RelativeTo="Absolute"/>
                          <AlphaKeyframe Time="0.05" Value="0.75" RelativeTo="Absolute"/>
                          <AlphaKeyframe Time="0.17" Value="0.75" RelativeTo="Absolute"/>
                          <AlphaKeyframe Time="0.40" Value="0.00" RelativeTo="Absolute"/>
                        </Keyframes>
                      </Animation>
                    </Source>
                  </TransformByAttributeAnimation>
                  <!-- Button highlight - stop -->
                  <TransformByAttributeAnimation Name="Button.PressedHighlight.Hide" Filter="Position" Attribute="Width" Magnitude="1.0">
                    <Source>
                      <Animation Type="Hide">
                        <Keyframes>
                          <PositionKeyframe Time="0.00" Value="0.0,0,0" RelativeTo="Current"/>
                          <PositionKeyframe Time="0.10" Value="1.0,0,0" RelativeTo="Final"/>
                          <AlphaKeyframe Time="0.00" RelativeTo="Current"/>
                          <AlphaKeyframe Time="0.10" Value="0.0" RelativeTo="Absolute"/>
                        </Keyframes>
                      </Animation>
                    </Source>
                  </TransformByAttributeAnimation>
                </Animations>
              </Graphic>
            </Children>
          </Clip>
          <!-- Focus overlay -->
          <Graphic Name="FocusOverlay" Layout="Fill" Content="[FocusOverlayImage]">
            <Animations>
              <!-- Button focus overlay pulse -->
              <Animation Name="Button.FocusOverlay.Idle" Loop="-1" Type="Idle">
                <Keyframes>
                  <AlphaKeyframe Time="0.0" Value="0.0" Interpolation="SCurve" RelativeTo="Absolute"/>
                  <AlphaKeyframe Time="1.5" Value="0.63" Interpolation="SCurve" RelativeTo="Absolute"/>
                  <AlphaKeyframe Time="3.0" Value="0.0" RelativeTo="Absolute"/>
                </Keyframes>
              </Animation>
            </Animations>
          </Graphic>
          <!-- Background image -->
          <Graphic Name="Background" Layout="Fill" Content="[NoFocusImage]">
          </Graphic>
        </Children>
      </Panel>
    </Content>
  </UI>

  <!-- ScrollUpButton -->
  <UI Name="ScrollUpButton" BaseUI="me:ScrollButton">
    <Properties>
      <ScrollingData  Name="ScrollData" ScrollingData="$Required"/>
      <Image   Name="NoFocusImage"    Image="resx://Library/Library.Resources/V3_Controls_Common_Scroll_Up_NoFocus"/>
      <Image   Name="FocusImage"      Image="resx://Library/Library.Resources/V3_Controls_Common_Scroll_Up_Focus"/>
      <Image   Name="DisabledImage"   Image="resx://Library/Library.Resources/V3_Controls_Common_Scroll_Up_Disabled"/>
    </Properties>

    <Locals>
      <InvokeCommand Name="Command" Description="ScrollUp" Target="[ScrollData.ScrollUp]"/>
    </Locals>

    <Rules>
      <Binding Source="[ScrollData.CanScrollUp]" Target="[Input.Enabled]"/>
      <Default Target="[Clicker.Command]" Value="[Command]"/>

    </Rules>
  </UI>

  <!-- ScrollDownButton -->
  <UI Name="ScrollDownButton" BaseUI="me:ScrollButton">
    <Properties>
      <ScrollingData Name="ScrollData" ScrollingData="$Required"/>
      <Image   Name="NoFocusImage"    Image="resx://Library/Library.Resources/V3_Controls_Common_Scroll_Down_NoFocus"/>
      <Image   Name="FocusImage"      Image="resx://Library/Library.Resources/V3_Controls_Common_Scroll_Down_Focus"/>
      <Image   Name="DisabledImage"   Image="resx://Library/Library.Resources/V3_Controls_Common_Scroll_Down_Disabled"/>
    </Properties>
    <Locals>
      <InvokeCommand Name="Command" Description="ScrollUp" Target="[ScrollData.ScrollDown]"/>
    </Locals>
    <Rules>
      <Binding Source="[ScrollData.CanScrollDown]" Target="[Input.Enabled]"/>
      <Default Target="[Clicker.Command]" Value="[Command]"/>
    </Rules>
  </UI>
</Mcml>