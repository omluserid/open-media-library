<Mcml xmlns="http://schemas.microsoft.com/2006/mcml" xmlns:cor ="assembly://MsCorLib/System" xmlns:coll="assembly://MsCorLib/System.Collections" xmlns:shel="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.Shell" xmlns:util="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.UI.Utility" xmlns:shl ="assembly://Microsoft.MediaCenter.Shell/Microsoft.MediaCenter.Shell" xmlns:comm="res://Microsoft.MediaCenter.Shell!Globals.mcml" xmlns:ctlres="res://Microsoft.MediaCenter.Shell!Controls.mcml" xmlns:focus ="res://Microsoft.MediaCenter.Shell!FocusAnimation.mcml" xmlns:ecom="res://Microsoft.MediaCenter.Shell!EpgCommon.mcml" xmlns:me ="Me">
  <Aggregate Source="res://Microsoft.MediaCenter.Shell!BrowseCommand.mcml"/>
  <Aggregate Source="res://Microsoft.MediaCenter.Shell!BrowseDetails.mcml"/>
  <Aggregate Source="res://Microsoft.MediaCenter.Shell!BrowsePivots.mcml"/>
  <Aggregate Source="res://Microsoft.MediaCenter.Shell!BrowseGallery.mcml"/>
  <Aggregate Source="res://Microsoft.MediaCenter.Shell!BrowseSortList.mcml"/>
  <Image Name="Browse.TitleShadow" Source="res://ehres!Browse.TitleShadow.png" NineGrid="100, 0, 100, 62" Flippable="true"/>
  <Image Name="Browse.TitleShadowListView" Source="res://ehres!Browse.TitleShadowListView.png" NineGrid="100, 0, 100, 62" Flippable="true"/>
  <Image Name="Browse.Selector" Source="res://ehres!Selector.png" NineGrid="9, 9, 9, 9"/>
  <Animation Name="Browse.Page.GradientColorMask">
    <Keyframes>
      <GradientColorMaskKeyframe Time="0.0" RelativeTo="Current"/>
      <GradientColorMaskKeyframe Time="0.267" RelativeTo="Final"/>
    </Keyframes>
  </Animation>
  <Animation Name="Browse.Page.GradientOffset">
    <Keyframes>
      <GradientOffsetKeyframe Time="0.0" RelativeTo="Current"/>
      <GradientOffsetKeyframe Time="0.267" RelativeTo="Final"/>
    </Keyframes>
  </Animation>
  <UI Name="Browse">
    <Properties>
      <shl:BrowseModel Name="Model" BrowseModel="$Required"/>
      <shl:PageState Name="PageState" PageState="$Required"/>
      <Inset Name="RootPadding" Inset="224, 0, 0, 0"/>
      <Size Name="GallerySize" Size="0, 375"/>
      <Size Name="BrowsePanelSize" Size="0, 720"/>
      <cor:Boolean Name="InListMaker" Boolean="false"/>
    </Properties>
    <Locals>
      <Environment Name="Environment"/>
      <IntRangedValue Name="MetaDataTopShift" Value="0"/>
      <IntRangedValue Name="GalleryContentShift"/>
      <IntRangedValue Name="MetaDataLeftShift"/>
      <IntRangedValue Name="TotalCount"/>
      <IntRangedValue Name="TotalCountOverride"/>
      <IntRangedValue Name="ItemIndexOverride"/>
      <BooleanChoice Name="IsOneRow"/>
      <EditableText Name="FocusArea" Value="none"/>
      <EditableText Name="NavigationDirection" Value="none"/>
      <EditableText Name="TransitionState" Value="Idle"/>
      <EditableText Name="ItemMode" Value="none"/>
      <Timer Name="TransitionTimer" Interval="0" Enabled="false" AutoRepeat="false"/>
    </Locals>
    <Rules>
      <Rule>
        <Conditions>
          <Equality Source="[PageState.TransitionState]" Value="NavigatingToForward"/>
          <Equality Source="[Environment.RenderingDeviceType]" ConditionOp="NotEquals" Value="Gdi"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="none"/>
          <Set Target="[ItemMode.Value]" Value="none"/>
          <Set Target="[Everything.Visible]" Value="true" InvokePolicy="AsynchronousNormal"/>
          <Set Target="[TransitionState.Value]" Value="NavigatingToForward"/>
          <Set Target="[TransitionTimer.Interval]" Value="1533" ExclusiveApply="false"/>
          <Invoke Target="[TransitionTimer.Start]" InvokePolicy="AsynchronousLowPri"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[PageState.TransitionState]" Value="NavigatingToForward"/>
          <Equality Source="[Environment.RenderingDeviceType]" Value="Gdi"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="none"/>
          <Set Target="[ItemMode.Value]" Value="none"/>
          <Set Target="[Everything.Visible]" Value="true" InvokePolicy="AsynchronousNormal"/>
          <Set Target="[TransitionState.Value]" Value="NavigatingToForward"/>
          <Set Target="[TransitionTimer.Interval]" Value="300" ExclusiveApply="false"/>
          <Invoke Target="[TransitionTimer.Start]" InvokePolicy="AsynchronousLowPri"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[PageState.TransitionState]" Value="NavigatingToBackward"/>
          <Equality Source="[Environment.RenderingDeviceType]" ConditionOp="NotEquals" Value="Gdi"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="none"/>
          <Set Target="[ItemMode.Value]" Value="none"/>
          <Set Target="[Everything.Visible]" Value="true" InvokePolicy="AsynchronousNormal"/>
          <Set Target="[TransitionState.Value]" Value="NavigatingToBackward"/>
          <Set Target="[TransitionTimer.Interval]" Value="500"/>
          <Invoke Target="[TransitionTimer.Start]" InvokePolicy="AsynchronousLowPri"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[PageState.TransitionState]" Value="NavigatingToBackward"/>
          <Equality Source="[Environment.RenderingDeviceType]" Value="Gdi"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="none"/>
          <Set Target="[ItemMode.Value]" Value="none"/>
          <Set Target="[Everything.Visible]" Value="true" InvokePolicy="AsynchronousNormal"/>
          <Set Target="[TransitionState.Value]" Value="NavigatingToBackward"/>
          <Set Target="[TransitionTimer.Interval]" Value="200"/>
          <Invoke Target="[TransitionTimer.Start]" InvokePolicy="AsynchronousLowPri"/>
        </Actions>
      </Rule>
      <Condition Source="[PageState.TransitionState]" SourceValue="NavigatingAwayForward">
        <Actions>
          <Set Target="[TransitionState.Value]" Value="NavigatingAwayForward" />
          <Set Target="[Everything.Visible]" Value="false" InvokePolicy="AsynchronousNormal"/>
        </Actions>
      </Condition>
      <Condition Source="[PageState.TransitionState]" SourceValue="NavigatingAwayBackward">
        <Actions>
          <Set Target="[TransitionState.Value]" Value="NavigatingAwayBackward"/>
          <Set Target="[Everything.Visible]" Value="false" InvokePolicy="AsynchronousNormal"/>
        </Actions>
      </Condition>
      <Changed Source="[TransitionTimer.Tick]">
        <Actions>
          <Set Target="[TransitionState.Value]" Value="Idle"/>
        </Actions>
      </Changed>
      <Rule>
        <Conditions>
          <IsValid Source="[Model.Pivots.Chosen!shl:IBrowsePivot.Content.Count]"/>
          <Modified Source="[Model.Pivots.Chosen!shl:IBrowsePivot.Content.Count]" InitialEvaluate="true"/>
        </Conditions>
        <Actions>
          <Set Target="[TotalCount.Value]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.Content.Count]"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <Panel Name="Everything">
        <Layout>
          <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
        </Layout>
        <Children>
          <Panel Layout="Fill" Navigation="Column" MaximumSize="[BrowsePanelSize]" MinimumSize="[BrowsePanelSize]">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 0" Top="Parent, 0" Right="Parent, 1" Bottom="Parent, 1" Horizontal="Fill" Vertical="Center"/>
            </LayoutInput>
            <Children>
              <Panel>
                <Layout>
                  <AnchorLayout SizeToVerticalChildren="false"/>
                </Layout>
                <Children>
                  <me:PIPArea Name="PIPArea" MaximumSize="861, 150" MinimumSize="861, 150" FocusArea="[FocusArea]" NavigationDirection="[NavigationDirection]" TransitionState="[TransitionState]">
                    <LayoutInput>
                      <AnchorLayoutInput Horizontal="Near" Vertical="Far" />
                    </LayoutInput>
                  </me:PIPArea>
                </Children>
              </Panel>
              <Panel Padding="[RootPadding]" Layout="Dock">
                <Children>
                  <me:NavigationArea FocusOrder="1" Navigation="TabGroup" Model="[Model]" FocusArea="[FocusArea]" NavigationDirection="[NavigationDirection]" InListMaker="[InListMaker]" TransitionState="[TransitionState]">
                    <LayoutInput>
                      <DockLayoutInput Position="Top"/>
                    </LayoutInput>
                  </me:NavigationArea>
                  <me:ContentArea Name="ContentArea" FocusOrder="0" Navigation="TabGroup, RememberFocus, ContainHorizontal" Model="[Model]" FocusArea="[FocusArea]" MetaDataTopShift="[MetaDataTopShift]" NavigationDirection="[NavigationDirection]" GallerySize="[GallerySize]" InListMaker="[InListMaker]" GalleryContentShift="[GalleryContentShift]" MetaDataLeftShift="[MetaDataLeftShift]" TotalCount="[TotalCount]" TotalCountOverride="[TotalCountOverride]" ItemIndexOverride="[ItemIndexOverride]" IsOneRow="[IsOneRow]" TransitionState="[TransitionState]" ItemMode="[ItemMode]">
                    <LayoutInput>
                      <DockLayoutInput Position="Client"/>
                    </LayoutInput>
                  </me:ContentArea>
                </Children>
              </Panel>
            </Children>
          </Panel>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="PIPArea">
    <Properties>
      <EditableText Name="FocusArea" EditableText="$Required"/>
      <EditableText Name="NavigationDirection" EditableText="$Required"/>
      <EditableText Name="TransitionState" EditableText="$Required"/>
    </Properties>
    <Rules>
      <Rule>
        <Conditions>
          <Equality Source="[Input.DeepKeyFocus]" Value="true"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="PIP"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Pivot"/>
          <Equality Source="[FocusArea.Value]" Value="Command"/>
        </Conditions>
        <Actions>
          <Set Target="[PIP.VisualState]" Value="Inactive"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <NowPlaying Name="PIP" ShowFullMetadata="OnFocus" VisualState="Active" />
    </Content>
  </UI>
  <UI Name="NavigationArea">
    <Properties>
      <shl:BrowseModel Name="Model" BrowseModel="$Required"/>
      <EditableText Name="FocusArea" EditableText="$Required"/>
      <EditableText Name="NavigationDirection" EditableText="$Required"/>
      <EditableText Name="TransitionState" EditableText="$Required"/>
      <Size Name="NavSize" Size="0, 180"/>
      <cor:Boolean Name="InListMaker" Boolean="false"/>
    </Properties>
    <Locals>
      <shl:MenuData Name="SortMenu" Description="Sort Menu" AggressivelyTakeFocus="true" CloseOnLostFocus="true" Active="false"/>
    </Locals>
    <Rules>
      <Condition Source="[FocusArea.Value]" SourceValue="PIP">
        <Actions>
          <Set Target="[NavAreaPanel.Margins]" Value="23, 55, -23, -15"/>
          <Set Target="[NavAreaPanel.Scale]" Value="0.95, 0.95, 1.0"/>
          <Set Target="[NavAreaPanel.Alpha]" Value="0.6"/>
        </Actions>
      </Condition>
      <Changed Source="[Model.Commands]">
        <Actions>
          <Invoke Target="[CommandList.ForceRefresh]"/>
          <Set Target="[CommandList.DataSource]" Value="[Model.Commands]"/>
        </Actions>
      </Changed>
      <Changed Source="[Model.Pivots]">
        <Actions>
          <Invoke Target="[Pivots.ForceRefresh]"/>
          <Set Target="[Pivots.Pivots]" Value="[Model.Pivots]"/>
        </Actions>
      </Changed>
      <Binding Target="[SortList.Visible]" Source="[SortMenu.Active]"/>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToForward">
        <Actions>
          <Invoke Target="[CommandsPanel.AttachAnimation]" animation="animation://me:Browse.Command.NavigateToForward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToBackward">
        <Actions>
          <Invoke Target="[CommandsPanel.AttachAnimation]" animation="animation://me:Browse.Command.NavigateToBackward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingAwayForward">
        <Actions>
          <Invoke Target="[CommandsPanel.AttachAnimation]" animation="animation://me:Browse.Command.NavigateAwayForward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingAwayBackward">
        <Actions>
          <Invoke Target="[CommandsPanel.AttachAnimation]" animation="animation://me:Browse.Command.NavigateAwayBackward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
    </Rules>
    <Content>
      <Panel MaximumSize="[NavSize]" MinimumSize="[NavSize]" Navigation="ContainHorizontal">
        <Children>
          <Panel Name="NavAreaPanel" Margins="0, 40, 0, 0" Scale="1.0, 1.0, 1.0" Alpha="1.0">
            <Layout>
              <ReferenceLayout SizeToContent="false"/>
            </Layout>
            <Animations>
              <Animation Animation="animation://me:Browse.NavigationArea.Move"/>
              <Animation Animation="animation://me:Browse.NavigationArea.Scale"/>
            </Animations>
            <Children>
              <Panel Name="CommandsPanel" MinimumSize="0, 70" MaximumSize="0, 70" Margins="-38, 0, 0, 0">
                <Children>
                  <me:CommandList Name="CommandList" DataSource="[Model.Commands]" FocusArea="[FocusArea]" InListMaker="[InListMaker]" TransitionState="[TransitionState]"/>
                </Children>
              </Panel>
              <me:PivotList Name="Pivots" Alpha="1.0" Pivots="[Model.Pivots]" SortMenu="[SortMenu]" FocusArea="[FocusArea]" NavigationDirection="[NavigationDirection]" TransitionState="[TransitionState]">
                <LayoutInput>
                  <ReferenceLayoutInput To="CommandsPanel, 0, 1" Offset="0, 10"/>
                </LayoutInput>
                <Animations>
                  <Animation Animation="animation://me:Browse.Pivots.Panel.Show"/>
                  <Animation Animation="animation://me:Browse.Pivots.Panel.Alpha"/>
                </Animations>
              </me:PivotList>
              <me:SortList Name="SortList" Visible="false" Model="[SortMenu]" FocusOrder="1">
                <LayoutInput>
                  <ReferenceLayoutInput To="Pivots, 0, 1" Offset="0, 0" SizeDelta="0, 600" ContributeToWidth="false" ContributeToHeight="false"/>
                </LayoutInput>
              </me:SortList>
            </Children>
          </Panel>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="ContentArea">
    <Properties>
      <shl:BrowseModel Name="Model" BrowseModel="$Required"/>
      <IntRangedValue Name="MetaDataTopShift" IntRangedValue="$Required"/>
      <IntRangedValue Name="GalleryContentShift" IntRangedValue="$Required"/>
      <IntRangedValue Name="MetaDataLeftShift" IntRangedValue="$Required"/>
      <IntRangedValue Name="TotalCount" IntRangedValue="$Required"/>
      <BooleanChoice Name="IsOneRow" BooleanChoice="$Required"/>
      <EditableText Name="FocusArea" EditableText="$Required"/>
      <EditableText Name="NavigationDirection" EditableText="$Required"/>
      <EditableText Name="TransitionState" EditableText="$Required"/>
      <EditableText Name="ItemMode" EditableText="$Required"/>
      <IntRangedValue Name="TotalCountOverride"/>
      <IntRangedValue Name="ItemIndexOverride"/>
      <Size Name="GallerySize"/>
      <cor:Boolean Name="InListMaker"/>
      <Animation Name="SelectorHideKeyUp" Animation="animation://me:Browse.Gallery.Selector.Hide.Key.Up"/>
      <Animation Name="SelectorMoveKey" Animation="animation://me:Browse.Gallery.Selector.Move.Key"/>
    </Properties>
    <Locals>
      <Environment Name="Environment"/>
      <IntRangedValue Name="SelectedGroup"/>
      <IntRangedValue Name="SelectedIndex"/>
      <util:WrappedIndexTransformer Name="IndexTransformer"/>
      <cor:Boolean Name="NeedContentRefresh" Boolean="false"/>
      <cor:Boolean Name="NeedDetailsRefresh" Boolean="false"/>
      <BooleanChoice Name="IsListView" Value="false"/>
      <Timer Name="EmptyContentTimer" Interval="1000" AutoRepeat="false" Enabled="false" />
      <EditableText Name="PreviousFocusArea" Value="previous"/>
      <RangedValue Name="KeyDelay" Value="1.0"/>
      <Timer Name="DetailsTimer" Interval="1533" AutoRepeat="false" Enabled="false"/>
      <Inset Name="ContentPanelMargins"/>
      <AnchorLayoutInput Name="DetailsMetadataLayoutInput" Horizontal="Near">
        <Left>
          <AnchorEdge Id="Focus" Percent="0" MinimumOffset="-30" MaximumOffset="248"/>
        </Left>
        <Top>
          <AnchorEdge Id="ContentArea" Percent="1" Offset="[MetaDataTopShift.Value]"/>
        </Top>
        <Right>
          <AnchorEdge Id="Parent" Percent="1" Offset="-175"/>
        </Right>
      </AnchorLayoutInput>
      <AnchorLayoutInput Name="CounterContainerLayoutInput" Horizontal="Far" Vertical="Near">
        <Top>
          <AnchorEdge Id="Parent" Percent="1" Offset="-77"/>
        </Top>
        <Right>
          <AnchorEdge Id="Parent" Percent="1" Offset="-110"/>
        </Right>
      </AnchorLayoutInput>
      <Command Name="NavigateIntoContent"/>
      <Command Name="ItemSelected"/>
      <cor:Single Name="BrowseGalleryTitleFadeSize" Single="global://comm:BrowseGalleryTitleFadeSize"/>
      <cor:Single Name="BrowseGalleryTitleFarOffset" Single="global://comm:BrowseGalleryTitleFarOffset"/>
    </Locals>
    <Rules>
      <Condition Source="[Environment.Is2DAnimationExperience]" SourceValue="true">
        <Actions>
          <Set Target="[SelectorHideKeyUp]" Value="animation://me:Browse.Gallery.Selector.Hide.Key.Up.GDI"/>
          <Set Target="[SelectorMoveKey]" Value="animation://me:Browse.Gallery.Selector.Move.Key.GDI"/>
        </Actions>
      </Condition>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[TransitionState.Value]" Value="NavigatingToForward"/>
          <Equality Source="[TransitionState.Value]" Value="NavigatingToBackward"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusArea.Value]" Value="None"/>
          <Set Target="[DetailsContainer.Visible]" Value="false"/>
          <Invoke Target="[DetailsTimer.Start]" InvokePolicy="AsynchronousLowPri"/>
        </Actions>
      </Rule>
      <Changed Source="[DetailsTimer.Tick]">
        <Actions>
          <Set Target="[DetailsContainer.Visible]" Value="true"/>
        </Actions>
      </Changed>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToForward">
        <Actions>
          <Invoke Target="[TitleContainer.AttachAnimation]" animation="animation://me:Browse.Gallery.Title.NavigateToForward" InvokePolicy="Synchronous"/>
          <Invoke Target="[CounterContainer.AttachAnimation]" animation="animation://me:Browse.Counter.NavigateToForward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingToBackward">
        <Actions>
          <Invoke Target="[TitleContainer.AttachAnimation]" animation="animation://me:Browse.Gallery.Title.NavigateToBackward" InvokePolicy="Synchronous"/>
          <Invoke Target="[CounterContainer.AttachAnimation]" animation="animation://me:Browse.Counter.NavigateToBackward" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingAwayForward">
        <Actions>
          <Invoke Target="[TitleContainer.AttachAnimation]" animation="animation://me:Browse.Gallery.Title.NavigateAwayForward" InvokePolicy="Synchronous"/>
          <Invoke Target="[Details.AttachAnimation]" animation="animation://me:Browse.Details.NavigateAwayForward" InvokePolicy="Synchronous"/>
          <Invoke Target="[CounterContainer.AttachAnimation]" animation="animation://me:Browse.Counter.NavigateAway" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[TransitionState.Value]" SourceValue="NavigatingAwayBackward">
        <Actions>
          <Invoke Target="[Selector.AttachAnimation]" animation="animation://me:Browse.Gallery.Selector.NavigateAwayBackward" InvokePolicy="Synchronous"/>
          <Invoke Target="[TitleContainer.AttachAnimation]" animation="animation://me:Browse.Gallery.Title.NavigateAwayBackward" InvokePolicy="Synchronous"/>
          <Invoke Target="[Details.AttachAnimation]" animation="animation://me:Browse.Details.NavigateAwayBackward" InvokePolicy="Synchronous"/>
          <Invoke Target="[CounterContainer.AttachAnimation]" animation="animation://me:Browse.Counter.NavigateAway" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Condition Source="[IsListView.Value]" SourceValue="true">
        <Actions>
          <Set Target="[TitleShadow.Image]" Value="image://me:Browse.TitleShadowListView"/>
        </Actions>
      </Condition>
      <Default Target="[TitleShadow.Image]" Value="image://me:Browse.TitleShadow"/>
      <Rule>
        <Conditions>
          <Equality Source="[Environment.IsMouseActive]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Selector.AttachAnimation]" animation="animation://me:Browse.Gallery.Selector.Hide.Mouse" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Selector.AttachAnimation]" animation="animation://me:Browse.Gallery.Selector.Move.Mouse" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Environment.IsMouseActive]" Value="false"/>
          <Equality Source="[TransitionState.Value]" Value="NavigatingToForward"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Selector.AttachAnimation]" animation="[SelectorHideKeyUp]" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Selector.AttachAnimation]" animation="[SelectorMoveKey]" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        </Actions>
      </Rule>
      <Condition Source="[ItemMode.Value]" SourceValue="Press">
        <Actions>
          <PlayAnimation Target="[Selector]" Animation="animation://me:Browse.Gallery.Selector.Press"/>
        </Actions>
      </Condition>
      <Condition Source="[ItemMode.Value]" SourceValue="Release">
        <Actions>
          <PlayAnimation Target="[Selector]" Animation="animation://me:Browse.Gallery.Selector.Release"/>
        </Actions>
      </Condition>
      <Condition Source="[ItemMode.Value]" SourceValue="Select">
        <Actions>
          <PlayAnimation Target="[Selector]" Animation="animation://me:Browse.Gallery.Selector.Release"/>
          <Invoke Target="[Selector.DetachAnimation]" type="Hide" InvokePolicy="Synchronous"/>
        </Actions>
      </Condition>
      <Rule>
        <Conditions>
          <Equality Source="[ItemMode.Value]" Value="Select"/>
          <Equality Source="[TransitionState.Value]" Value="NavigatingAwayForward"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Selector.AttachAnimation]" animation="animation://me:Browse.Gallery.Selector.NavigateAwayForward" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Gallery"/>
          <Equality Source="[Content.ShowGallerySelector]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Selector.Visible]" Value="true"/>
        </Actions>
      </Rule>
      <Changed Source="[MetaDataLeftShift.Value]">
        <Actions>
          <Set Target="[DetailsMetadataLayoutInput.Left.Offset]" Value="[MetaDataLeftShift.Value]" />
          <Invoke Target="[ContentPanel.MarkLayoutInvalid]"/>
        </Actions>
      </Changed>
      <Changed Source="[MetaDataTopShift.Value]">
        <Actions>
          <Set Target="[DetailsMetadataLayoutInput.Top.Offset]" Value="[MetaDataTopShift.Value]" ExclusiveApply="false"/>
          <Invoke Target="[ContentPanel.MarkLayoutInvalid]"/>
        </Actions>
      </Changed>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="PIP"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[TitleShadow]" Animation="animation://me:Browse.Title.Hide"/>
          <Invoke Target="[Selector.AttachAnimation]" animation="animation://me:Browse.Gallery.Selector.Hide.Key.Down" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Set Target="[CounterPanel.Visible]" Value="false"/>
          <Set Target="[BottomFade.Offset]" Value="-350"/>
          <Set Target="[BottomFade.ColorMask]" Value="255,0,0,0"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Command"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ContentContainer.Offset]" Value="0"/>
          <Set Target="[ContentContainer.ColorMask]" Value="0,0,0,0"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Pivot"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ContentContainer.Offset]" Value="0"/>
          <Set Target="[ContentContainer.ColorMask]" Value="0,0,0,0"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Command"/>
          <Equality Source="[FocusArea.Value]" Value="Pivot"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[TitleShadow]" Animation="animation://me:Browse.Title.Hide"/>
          <PlayAnimation Target="[CounterContainer]" Animation="animation://me:Browse.Title.Hide"/>
          <Invoke Target="[Selector.AttachAnimation]" animation="animation://me:Browse.Gallery.Selector.Hide.Key.Up" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Set Target="[ContentContainer.Offset]" Value="350"/>
          <Set Target="[ContentContainer.ColorMask]" Value="255,0,0,0"/>
        </Actions>
      </Rule>
      <Condition Source="[FocusArea.Value]" SourceValue="Gallery">
        <Actions>
          <Set Target="[TitleShadow.Visible]" Value="true"/>
          <PlayAnimation Target="[TitleShadow]" Animation="animation://me:Browse.Title.Show"/>
          <PlayAnimation Target="[CounterContainer]" Animation="animation://me:Browse.Title.Show"/>
        </Actions>
      </Condition>
      <Binding Target="[Title.Content]" Source="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentLabel]"/>
      <Rule>
        <Conditions>
          <Equality Source="[NavigationDirection.Value]" Value="right"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Hide.Right" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Show.Right" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[NavigationDirection.Value]" Value="right"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Hide.Right.GDI" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Show.Right.GDI" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[NavigationDirection.Value]" Value="left"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Hide.Left" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Show.Left" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[NavigationDirection.Value]" Value="left"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Hide.Left.GDI" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Content.AttachAnimation]" animation="animation://me:Browse.Gallery.Show.Left.GDI" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        </Actions>
      </Rule>
      <Rule>
        <Actions>
          <Invoke Target="[Content.DetachAnimation]" type="Show"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="ListMaker"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[ContentContainer]" Animation="animation://me:Browse.Gallery.Show.Focus"/>
          <Set Target="[NeedDetailsRefresh]" Value="true"/>
          <Set Target="[Details.Visible]" Value="true"/>
          <Set Target="[PreviousFocusArea.Value]" Value="Gallery"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="ListMaker"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[ContentContainer]" Animation="animation://me:Browse.Gallery.Show.Focus.GDI"/>
          <Set Target="[NeedDetailsRefresh]" Value="true"/>
          <Set Target="[Details.Visible]" Value="true"/>
          <Set Target="[PreviousFocusArea.Value]" Value="Gallery"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" ConditionOp="NotEquals" Value="Gallery"/>
          <Equality Source="[FocusArea.Value]" ConditionOp="NotEquals" Value="ListMaker"/>
          <Equality Source="[PreviousFocusArea.Value]" Value="Gallery"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[ContentContainer]" Animation="animation://me:Browse.Gallery.Hide.Focus"/>
          <Invoke Target="[Details.AttachAnimation]" animation="animation://me:Browse.Details.Hide" InvokePolicy="Synchronous"/>
          <Set Target="[Details.Visible]" Value="false"/>
          <Set Target="[PreviousFocusArea.Value]" Value="[FocusArea.Value]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" ConditionOp="NotEquals" Value="Gallery"/>
          <Equality Source="[FocusArea.Value]" ConditionOp="NotEquals" Value="ListMaker"/>
          <Equality Source="[PreviousFocusArea.Value]" Value="Gallery"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[ContentContainer]" Animation="animation://me:Browse.Gallery.Hide.Focus.GDI"/>
          <Invoke Target="[Details.AttachAnimation]" animation="animation://me:Browse.Details.Hide" InvokePolicy="Synchronous"/>
          <Set Target="[Details.Visible]" Value="false"/>
          <Set Target="[PreviousFocusArea.Value]" Value="[FocusArea.Value]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Gallery"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[ContentContainer]" Animation="animation://me:Browse.Gallery.Show.Focus"/>
          <Set Target="[NeedDetailsRefresh]" Value="true"/>
          <Set Target="[Details.Visible]" Value="true"/>
          <Set Target="[PreviousFocusArea.Value]" Value="[FocusArea.Value]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[FocusArea.Value]" Value="Gallery"/>
          <Equality Source="[TransitionState.Value]" Value="Idle"/>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[ContentContainer]" Animation="animation://me:Browse.Gallery.Show.Focus.GDI"/>
          <Set Target="[NeedDetailsRefresh]" Value="true"/>
          <Set Target="[Details.Visible]" Value="true"/>
          <Set Target="[PreviousFocusArea.Value]" Value="[FocusArea.Value]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[Model.Pivots.Chosen!shl:IBrowsePivot.DetailTemplate]"/>
        </Conditions>
        <Actions>
          <Set Target="[NeedDetailsRefresh]" Value="true"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[Model.Pivots.Chosen]" InitialEvaluate="true"/>
        </Conditions>
        <Actions>
          <Set Target="[NeedContentRefresh]" Value="true"/>
          <Set Target="[NeedDetailsRefresh]" Value="true"/>
          <Set Target="[SelectedGroup.Value]" Value="0"/>
          <Set Target="[SelectedIndex.Value]" Value="0"/>
          <Set Target="[EmptyContentMessage.Visible]" Value="false"/>
          <Invoke Target="[EmptyContentTimer.Start]"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Modified Source="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentTemplate]"/>
          <Modified Source="[Model.Pivots.Chosen!shl:IBrowsePivot.Content]"/>
        </Conditions>
        <Actions>
          <Set Target="[NeedContentRefresh]" Value="true"/>
        </Actions>
      </Rule>
      <Condition Source="[NeedDetailsRefresh]" SourceValue="true">
        <Actions>
          <Invoke Target="[Details.ForceRefresh]"/>
          <Set Target="[Details.SelectionPolicy]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy]"/>
          <Set Target="[Details.DetailTemplate]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.DetailTemplate]"/>
        </Actions>
      </Condition>
      <Condition Source="[NeedContentRefresh]" SourceValue="true">
        <Actions>
          <Invoke Target="[Content.ForceRefresh]"/>
          <Invoke Target="[Content.ClearStickyFocus]"/>
          <Set Target="[Content.Model]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot]"/>
          <Set Target="[Content.Source]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentTemplate]"/>
          <FireChange Source="[Content]"/>
        </Actions>
      </Condition>
      <Changed Source="[NavigateIntoContent.Invoked]">
        <Actions>
          <Invoke Target="[Content.NavigateInto]"/>
        </Actions>
      </Changed>
      <Rule>
        <Conditions>
          <Equality Source="[NeedContentRefresh]" Value="true"/>
          <Equality Source="[FocusArea.Value]" Value="Gallery"/>
        </Conditions>
        <Actions>
          <Invoke Target="[NavigateIntoContent.Invoke]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Placeholder.Visible]" Value="true"/>
          <Modified Source="[TotalCount]"/>
        </Conditions>
        <Actions>
          <Set Target="[Placeholder.Visible]" Value="false"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[EmptyContentTimer.Tick]"/>
          <Equality Source="[TotalCount.Value]" Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[EmptyContentMessage.Visible]" Value="true" InvokePolicy="AsynchronousLowPri"/>
          <Set Target="[Placeholder.Visible]" Value="true"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[TotalCount.Value]" ConditionOp="GreaterThan" Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[EmptyContentMessage.Visible]" Value="false"/>
          <Set Target="[Placeholder.Visible]" Value="false"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy.SelectionIndex]"/>
        </Conditions>
        <Actions>
          <Set Target="[SelectedIndex.Value]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy.SelectionIndex]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[TotalCountOverride.Value]"/>
          <Equality Source="[TotalCountOverride.Value]" ConditionOp="GreaterThan" Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[MyCounter.TotalCount]" Value="[TotalCountOverride.Value]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[TotalCount.Value]"/>
        </Conditions>
        <Actions>
          <Set Target="[MyCounter.TotalCount]" Value="[TotalCount.Value]"/>
          <Set Target="[IndexTransformer.Count]" Value="[TotalCount.Value]"/>
        </Actions>
      </Rule>
      <Binding Target="[MyCounter.ItemIndex]" Source="[ItemIndexOverride.Value]">
        <Conditions>
          <IsValid Source="[ItemIndexOverride.Value]" />
          <Equality Source="[ItemIndexOverride.Value]" ConditionOp="GreaterThan" Value="0"/>
        </Conditions>
      </Binding>
      <Binding Target="[MyCounter.ItemIndex]" Source="[SelectedIndex.Value]" Transformer="[IndexTransformer]"/>
      <Binding Target="[EmptyContentMessage.Content]" Source="[Model.Pivots.Chosen!shl:IBrowsePivot.EmptyContentText]"/>
      <Rule>
        <Conditions>
          <Equality Source="[InListMaker]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[ContentPanelMargins.Top]" Value="0" />
          <Set Target="[CounterContainerLayoutInput.Top.Offset]" Value="-150"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[GalleryContentShift.Value]"/>
        </Conditions>
        <Actions>
          <Set Target="[ContentPanelMargins.Top]" Value="[GalleryContentShift.Value]"/>
          <Set Target="[ContentPanel.Margins]" Value="[ContentPanelMargins]"/>
        </Actions>
      </Rule>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[IsOneRow.Value]" Value="true"/>
          <Equality Source="[InListMaker]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Content.MinimumSize]" Value="0, 0"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[BrandLogo]"/>
          <IsValid Source="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy.CurrentSelection!shl:IAttributable.AllowAttribution]"/>
          <Equality Source="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy.CurrentSelection!shl:IAttributable.AllowAttribution]" Value="true" />
        </Conditions>
        <Actions>
          <Set Target="[BrandLogo.Content]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy.CurrentSelection!shl:IAttributable.AttributionImage]"/>
          <Set Target="[BrandLogo.AccessibilityValue]" Value="[Model.Pivots.Chosen!shl:IBrowsePivot.ContentSelectionPolicy.CurrentSelection!shl:IAttributable.AttributionDescription]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[BrandLogo]"/>
          <Equality Source="[FocusArea.Value]" Value="Gallery"/>
        </Conditions>
        <Actions>
          <Set Target="[BrandLogo.Visible]" Value="true"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <Panel Navigation="ContainHorizontal">
        <Layout>
          <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="false"/>
        </Layout>
        <Children>
          <Clip Name="TitleContainer" Orientation="Vertical" ShowNear="false" ShowFar="true" FadeSize="[BrowseGalleryTitleFadeSize]" FarOffset="[BrowseGalleryTitleFarOffset]">
            <LayoutInput>
              <AnchorLayoutInput Left="Parent, 0, 170" Right="Parent, 1, -53" Top="Parent, 0, -172" Horizontal="Far" ContributesToWidth="false" ContributesToHeight="false"/>
            </LayoutInput>
            <Children>
              <Graphic Name="TitleShadow" Margins="-20, 0, -45, 0" Padding="20, 0, 45, 0" SizingPolicy="SizeToChildren">
                <Animations>
                  <Animation Animation="animation://me:Browse.Gallery.Title.Show"/>
                  <Animation Animation="animation://me:Browse.Gallery.Title.Hide"/>
                </Animations>
                <Children>
                  <ctlres:StaticText Name="Title" AccessibilityName="res://ehres!Acc_Name_Browse_Title" Color="color://comm:MediumBlue" Margins="0, 0, 0, 0" Padding="0, 0, 0, 30">
                    <Font>
                      <Font Name="BrowseMainTitle" FontName="global://comm:LightFontFace" FontSize="48" />
                    </Font>
                  </ctlres:StaticText>
                </Children>
              </Graphic>
            </Children>
          </Clip>
          <Panel Name="ContentPanel" Margins="[ContentPanelMargins]">
            <Layout>
              <AnchorLayout SizeToHorizontalChildren="false" SizeToVerticalChildren="true"/>
            </Layout>
            <LayoutInput>
              <AnchorLayoutInput Horizontal="Near" Vertical="Near" />
            </LayoutInput>
            <Children>
              <Graphic Name="Selector" Image="image://me:Browse.Selector" Visible="false" SizingPolicy="SizeToConstraint" Scale="1.26, 1.26, 1.26" CenterPointPercent="0.5,0.5,0.5">
                <LayoutInput>
                  <AnchorLayoutInput Left="Focus, 0, -4" Right="Focus, 1, 4" Top="Focus, 0, -4" Bottom="Focus, 1, 4" ContributesToWidth="false" ContributesToHeight="false"/>
                </LayoutInput>
                <Animations>
                  <Animation Animation="animation://me:Browse.Gallery.Selector.Show"/>
                </Animations>
                <Children>
                  <focus:SelectorFocusLoop>
                    <LayoutInput>
                      <AnchorLayoutInput Left="Parent, 0" Right="Parent, 1" Top="Parent, 0" Bottom="Parent, 1" ContributesToWidth="false" ContributesToHeight="false"/>
                    </LayoutInput>
                  </focus:SelectorFocusLoop>
                </Children>
              </Graphic>
              <Panel Name="ContentArea">
                <LayoutInput>
                  <AnchorLayoutInput Horizontal="Near" Vertical="Near"/>
                </LayoutInput>
                <Children>
                  <Gradient Name="ContentContainer" Orientation="Vertical" Offset="0" ColorMask="0,0,0,0" OffsetAnimation="animation://me:Browse.Page.GradientOffset" ColorMaskAnimation="animation://me:Browse.Page.GradientColorMask">
                    <Ramp>
                      <RampValue Value="0" Position="-350" Relative="GadgetMin"/>
                      <RampValue Value="1" Position="0" Relative="GadgetMin"/>
                      <RampValue Value="1" Position="0" Relative="GadgetMax"/>
                    </Ramp>
                    <Children>
                      <Gradient Name="BottomFade" Orientation="Vertical" Offset="0" ColorMask="0,0,0,0" OffsetAnimation="animation://me:Browse.Page.GradientOffset" ColorMaskAnimation="animation://me:Browse.Page.GradientColorMask">
                        <Ramp>
                          <RampValue Value="1" Position="0" Relative="GadgetMin"/>
                          <RampValue Value="1" Position="0" Relative="GadgetMax"/>
                          <RampValue Value="0" Position="350" Relative="GadgetMax"/>
                        </Ramp>
                        <Children>
                          <me:Gallery Name="Content" Model="[Model.Pivots.Chosen!shl:IBrowsePivot]" TransitionState="[TransitionState]" FocusArea="[FocusArea]" Margins="0, 0, 0, 15" MinimumSize="[GallerySize]" MaximumSize="[GallerySize]" MetadataDelay="[KeyDelay]" MetaDataTopShift="[MetaDataTopShift]" ItemMode="[ItemMode]" IsListView="[IsListView]" IsOneRow="[IsOneRow]" InListMaker="[InListMaker]" GalleryContentShift="[GalleryContentShift]" MetaDataLeftShift="[MetaDataLeftShift]" SelectedIndex="[SelectedIndex]" SelectedGroup="[SelectedGroup]" TotalCount="[TotalCount]" ItemIndexOverride="[ItemIndexOverride]" TotalCountOverride="[TotalCountOverride]" NavigateIntoContent="[NavigateIntoContent]">
                            <Animations>
                              <IntensiveAnimation Source="animation://me:Browse.Gallery.Show.Right"/>
                              <IntensiveAnimation Source="animation://me:Browse.Gallery.Hide.Right"/>
                            </Animations>
                          </me:Gallery>
                        </Children>
                      </Gradient>
                    </Children>
                  </Gradient>
                  <Text Name="EmptyContentMessage" Color="color://comm:OffWhite" WordWrap="true" MaximumSize="683,305" Margins="0, 45, 0, 0" Visible="false">
                    <Font>
                      <Font FontName="global://comm:RegularFontFace" FontSize="24"/>
                    </Font>
                    <Animations>
                      <Animation Animation="animation://comm:StandardFade.Show"/>
                      <Animation Animation="animation://comm:StandardFade.Hide"/>
                    </Animations>
                  </Text>
                  <me:FocusPlaceholder Name="Placeholder" MinimumSize="1,1"/>
                </Children>
              </Panel>
              <Panel Name="DetailsContainer" Visible="true" LayoutInput="[DetailsMetadataLayoutInput]">
                <Animations>
                  <Animation Animation="animation://me:Browse.Details.Move"/>
                </Animations>
                <Children>
                  <me:DetailsHost Name="Details" Model="[Model]" SelectionPolicy="null" DetailTemplate="null" Delay="[KeyDelay]" TransitionState="[TransitionState]"/>
                </Children>
              </Panel>
            </Children>
          </Panel>
          <Panel Name="CounterContainer" Layout="HorizontalFlow" LayoutInput="[CounterContainerLayoutInput]">
            <Children>
              <Panel Name="CounterPanel" Visible="true">
                <Animations>
                  <Animation Animation="animation://me:Browse.Counter.Show"/>
                  <Animation Animation="animation://me:Browse.Counter.Hide"/>
                </Animations>
                <Children>
                  <me:CounterHost Name="MyCounter" ItemIndex="0" TotalCount="0"/>
                </Children>
              </Panel>
            </Children>
          </Panel>
          <ecom:BrandLogo Name="BrandLogo" Content="null" Visible="false">
            <LayoutInput>
              <AnchorLayoutInput Right="CounterContainer,1" Bottom="CounterContainer,0,-17" />
            </LayoutInput>
          </ecom:BrandLogo>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="CounterHost" Flippable="false">
    <Properties>
      <cor:Int32 Name="ItemIndex" />
      <cor:Int32 Name="TotalCount" />
    </Properties>
    <Rules>
      <Rule>
        <Conditions>
          <Equality Source="[TotalCount]" ConditionOp="GreaterThan" Value="0"/>
        </Conditions>
        <Actions>
          <Set Target="[CounterContainer.Visible]" Value="true"/>
        </Actions>
      </Rule>
      <Binding Target="[ItemTotalCount.Content]" Source="[TotalCount]">
        <Transformer>
          <FormatTransformer/>
        </Transformer>
      </Binding>
      <Binding Target="[ItemNumber.Content]" Source="[ItemIndex]">
        <Transformer>
          <MathTransformer Add="1" Type="string"/>
        </Transformer>
      </Binding>
      <Default Target="[Accessible.Name]" Value="res://ehres!Acc_Name_Browse_ItemsCounter"/>
      <Default Target="[Accessible.Role]" Value="Indicator"/>
    </Rules>
    <Content>
      <Panel Name="CounterContainer" Visible="false">
        <Layout>
          <FlowLayout Orientation="Horizontal"/>
        </Layout>
        <Children>
          <ctlres:StaticText Name="ItemNumber" AccessibilityName="res://ehres!Acc_Name_Browse_ItemNumber" Color="color://comm:OffWhite">
            <Font>
              <Font FontName="global://comm:MainFontFace" FontSize="18"/>
            </Font>
          </ctlres:StaticText>
          <ctlres:StaticText Color="color://comm:LightBlue" Content="res://ehres!Browse_ItemsCounter_Separator" Margins="-6, -5, -6, 0">
            <Font>
              <Font FontName="global://comm:RegularFontFace" FontSize="21"/>
            </Font>
          </ctlres:StaticText>
          <ctlres:StaticText Name="ItemTotalCount" AccessibilityName="res://ehres!Acc_Name_Browse_ItemTotalCount" Color="color://comm:LightBlue">
            <Font>
              <Font FontName="global://comm:RegularFontFace" FontSize="18"/>
            </Font>
          </ctlres:StaticText>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="DetailsHost">
    <Properties>
      <shl:BrowseModel Name="Model" BrowseModel="$Required"/>
      <ISelectionPolicy Name="SelectionPolicy" ISelectionPolicy="$Required"/>
      <cor:String Name="DetailTemplate" String="null"/>
      <RangedValue Name="Delay" RangedValue="$Required"/>
      <EditableText Name="TransitionState" EditableText="$Required"/>
    </Properties>
    <Rules>
      <Rule>
        <Conditions>
          <IsValid Source="[DetailTemplate]"/>
        </Conditions>
        <Actions>
          <Set Target="[Details.Source]" Value="[DetailTemplate]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[SelectionPolicy]"/>
          <Modified Source="[SelectionPolicy.CurrentSelection]" InitialEvaluate="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Details.Selection]" Value="[SelectionPolicy.CurrentSelection]"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <me:Details Name="Details" Model="[Model]" Selection="null" MinimumSize="0, 100" KeyDelay="[Delay]" MouseDelay="null" TransitionState="[TransitionState]"/>
    </Content>
  </UI>
  <UI Name="FocusPlaceholder">
    <Rules>
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" ConditionOp="ChangedTo" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[Input.KeyInteractive]" Value="false"/>
        </Actions>
      </Rule>
      <Default Target="[Input.KeyInteractive]" Value="true"/>
    </Rules>
    <Content>
      <Panel Name="Placeholder"/>
    </Content>
  </UI>
  <UI Name="FadedTitle">
    <Properties>
      <cor:String Name="Content" String="null"/>
    </Properties>
    <Locals>
      <cor:Single Name="TitleFadeSize" Single="global://comm:TitleFadeSize"/>
      <cor:Single Name="TitleFarOffset" Single="global://comm:TitleFarOffset"/>
      <Environment Name="Environment" />
    </Locals>
    <Rules>
      <Binding Target="[Title.Content]" Source="[Content]"/>
      <Condition Source="[Environment.ColorScheme]" SourceValue="Default" Target="[GradientDisplay.ShowFar]" Value="true"/>
    </Rules>
    <Content>
      <Clip Orientation="Vertical" ShowNear="false" ShowFar="false" FadeSize="[TitleFadeSize]" FarOffset="[TitleFarOffset]" Name="GradientDisplay">
        <Children>
          <Graphic Name="TitleShadow" Margins="-20, 0, -45, 0" Padding="20, 0, 45, 0" SizingPolicy="SizeToChildren">
            <Animations>
              <Animation Animation="animation://me:Browse.Gallery.Title.Show"/>
              <Animation Animation="animation://me:Browse.Gallery.Title.Hide"/>
            </Animations>
            <Children>
              <ctlres:StaticText Name="Title" AccessibilityName="res://ehres!Acc_Name_Browse_Title" Color="color://comm:LightBlue" Margins="0, 0, 0, 0" Padding="0, 0, 0, 40" WordWrap="true" MaximumLines="2">
                <Font>
                  <Font Name="BrowseMainTitle" FontName="global://comm:LightFontFace" FontSize="29" />
                </Font>
              </ctlres:StaticText>
            </Children>
          </Graphic>
        </Children>
      </Clip>
    </Content>
  </UI>
  <UI Name="NowPlayingFadedTitle" BaseUI="me:FadedTitle">
    <Locals>
      <cor:Single Name="TitleFadeSize" Single="global://comm:NowPlayingTitleFadeSize"/>
      <cor:Single Name="TitleFarOffset" Single="global://comm:NowPlayingTitleFarOffset"/>
    </Locals>
  </UI>
</Mcml>