<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:addin="assembly://Microsoft.MediaCenter/Microsoft.MediaCenter.Hosting"
	  xmlns:cor="assembly://MsCorLib/System"
	  xmlns:a="assembly://Library/Library"
    xmlns:coll="assembly://MsCorLib/System.Collections"
    xmlns:s="resx://Library/Library.Resources/Styles"
    xmlns:controls="resx://Library/Library.Resources/CoreControls" 
	  xmlns:me="Me">

  <UI Name="MovieDetails">
    <Properties>
      <a:OMLApplication Name="Application" OMLApplication="$Required"/>
      <a:MovieDetailsPage Name="DetailsPage" MovieDetailsPage="$Required"/>

      <!-- The layout we will use to display the headings. -->
      <GridLayout Name="GridLayout" Orientation="Horizontal" Columns="2" AllowWrap="false"
						Spacing="10,10" MajorAlignment="Fill" MinorAlignment="Fill"/>
    </Properties>

    <Locals>
      <ShortcutHandler Name="PlayHandler" Shortcut="Play"/>

      <!-- AddInHost is where all Windows Media Center-specific services start -->
      <!-- from. It must appear in the Locals section of a markup file.        -->
      <addin:AddInHost Name="AddInHost"/>
      <!-- The ScrollingHandler which reacts to user keyboard input. -->
      <!-- Turn on handing of arrow keys for scrolling (not on by    -->
      <!-- default).                                                 -->
      <!-- NOTE: HandlerStage must be "Direct" (which is default).   -->
      <ScrollingHandler Name="ScrollingHandler" HandleDirectionalKeys="true"/>

      <!-- ScrollingData contains many ways to customize how scrolling -->
      <!-- should behave. It has methods to change the current scroll  -->
      <!-- position and it also reports the position. In this case,    -->
      <!-- the default values are used for the sample.                 -->
      <ScrollingData Name="ScrollingData"/>

      <Command Name="PlayMovieCommand" Description="Play Movie"/>
    </Locals>

    <Rules>
      <!-- Give ScrollingData to ScrollingHandler. -->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <Changed Source="[PlayMovieCommand.Invoked]">
        <Actions>
          <Invoke Target ="[DetailsPage.PlayMovie]"/>
        </Actions>
      </Changed>


      <!-- Handle the Play on remote -->
      <Rule>
        <Conditions>
          <Modified Source="[PlayHandler.Invoked]"/>
        </Conditions>
        <Actions>
          <Invoke Target ="[DetailsPage.PlayMovie]"/>
        </Actions>
      </Rule>
      
    </Rules>

    <Content>
      <ColorFill Content="Transparent" Layout="Form">
        <Children>
          <Panel Name="Image" Layout="VerticalFlow">
            <LayoutInput>
              <FormLayoutInput Left="Parent,0.05,20" Top="Parent,0.05,20" Bottom="Parent,1"/>
            </LayoutInput>
            <Children>
              <Graphic Name="Cover" Content="[DetailsPage.Background]" MinimumSize="336,480" MaximumSize="336,480" />
              <Clip Orientation="Vertical" FadeSize="40" NearOffset="70" MinimumSize="336,0" MaximumSize="336, 480">
                <Children>
                  <Graphic Name="coverflip" CenterPointPercent=".5,.5,.5" Scale="1,-1,1"
											 Content="[DetailsPage.Background]" Alpha=".4" >
                  </Graphic>
                </Children>
              </Clip>
            </Children>
          </Panel>

          <!--<controls:Button Name ="PlayMovie" DetailsPage="[DetailsPage]" Description="Play Movie"   PlayRate="2">
            <LayoutInput>
              <FormLayoutInput Left = "Image,1.02" Top="Parent,0.05,15"/>
            </LayoutInput>
          </controls:Button>-->

          <controls:Button Name="PlayMovie" Model="[PlayMovieCommand]"  >
            <LayoutInput>
              <FormLayoutInput Left = "Image,1.02" Top="Parent,0.05,15"/>
            </LayoutInput>
          </controls:Button>
          <!--<me:PlayRateButton Name ="PlayMovie" DetailsPage="[DetailsPage]" Description="Play Movie"   PlayRate="2">
            <LayoutInput>
              <FormLayoutInput Left = "Image,1.02" Top="Parent,0.05,15"/>
            </LayoutInput>
          </me:PlayRateButton>-->

          <Text Name="Title" Content="[DetailsPage.Title]" Font="font://s:Heading" Color="color://s:HeadingColor" >
            <LayoutInput>
              <FormLayoutInput Left="Image,1.02" Top="PlayMovie,1.05" Right="Parent,0.95"/>
            </LayoutInput>
          </Text>

          <Panel Name="MainDetails" >
            <Layout>
              <FlowLayout Orientation="Horizontal" Spacing="15,15" />
            </Layout>

            <Children>
              <Text Content="[DetailsPage.ReleaseYear]" Font="font://s:Small" WordWrap="false" Color="color://s:NormalColor" />
              <Text Content="[DetailsPage.Length]" Font="font://s:Small" WordWrap="false" Color="color://s:NormalColor" />
              <Repeater Source="[DetailsPage.Genres]" Layout="HorizontalFlow">
                <Content>
                  <Text Content="[RepeatedItem!cor:String]" Font="font://s:Small" WordWrap="false" Color="color://s:NormalColor" />
                </Content>
              </Repeater>

            </Children>
            <LayoutInput>
              <FormLayoutInput Left="Image,1.02" Top="Title,1.05"/>
            </LayoutInput>
          </Panel>

          <Text Name="Rating" Content="[DetailsPage.Rating]" Font="font://s:Small" Color="color://s:NormalColor" >
            <LayoutInput>
              <FormLayoutInput Left="Image,1.02" Top="MainDetails,1.05" />
            </LayoutInput>
          </Text>

          
          <me:SynopsisPanel Name="MovieSynopsis" Synopsis="[DetailsPage.Summary]">
            <LayoutInput>
              <FormLayoutInput Left="Image,1.02" Top="Rating,1.05,5" Right="Parent,0.95" />
            </LayoutInput>
          </me:SynopsisPanel>


          <Text Name="DirectorLabel" Content="Directed by: " Font="font://s:LabelFont" Color="color://s:LabelColor" >
            <LayoutInput>
              <FormLayoutInput Left="Image,1.02" Top="MovieSynopsis,1.02,15"/>
            </LayoutInput>
          </Text>

          <Panel Name="Director" Layout="HorizontalFlow">
            <Children>
              <Repeater Source="[DetailsPage.Directors]" Layout="HorizontalFlow">
                <Content>
                  <Text Content="[RepeatedItem!cor:String]" Font="font://s:Normal" WordWrap="false" Color="color://s:NormalColor" />
                </Content>
              </Repeater>
            </Children>
            <LayoutInput>
              <FormLayoutInput Left="DirectorLabel,1.02" Top="MovieSynopsis,1.02,15"/>
            </LayoutInput>
          </Panel>


          <Panel Layout="[GridLayout]">
            <LayoutInput>
              <FormLayoutInput Left="Image,1.02" Top="DirectorLabel,1.02" Right="Parent,1" Bottom="Parent,0.7"/>
            </LayoutInput>
            <Children>
              <me:ActorsPanel Name="Actors" ActorList="[DetailsPage.Actors]">
              </me:ActorsPanel>
              
            </Children>
          </Panel>

        </Children>
      </ColorFill>
    </Content>
  </UI>

  <!-- Button for changing the play rate -->
  <UI Name="PlayRateButton">
    <Properties>
      <a:MovieDetailsPage Name="DetailsPage" MovieDetailsPage="$Required"/>
      <cor:Single Name="PlayRate" Single="0"/>
      <cor:String Name="Description" String="ButtonName"/>
    </Properties>

    <Locals>
      <addin:AddInHost Name="AddInHost"/>
      <Command Name="Command" Description="Button Name"/>
    </Locals>

    <Rules>
      <Binding Source="[Description]" Target="[Command.Description]"/>

      <Changed Source="[Command.Invoked]">
        <Actions>
          <Invoke Target ="[DetailsPage.PlayMovie]"/>
        </Actions>
      </Changed>
    </Rules>

    <Content>
      <me:SimpleButton Command="[Command]"/>
    </Content>

  </UI>

  <!-- Simple button -->
  <UI Name="SimpleButton">

    <Properties>
      <!-- Command is a required parameter. -->
      <ICommand Name="Command" ICommand="$Required"/>

      <!-- Background color properties. -->
      <Color Name="BackgroundColor" Color="Transparent"/>
      <Color Name="BackgroundFocusedColor" Color="Transparent"/>
      <Color Name="BackgroundHoverColor" Color="PaleGoldenrod"/>
      <Color Name="BackgroundPressedColor" Color="White"/>

      <!-- Label color properties. -->
      <Color Name="LabelColor" Color="White"/>
      <Color Name="LabelFocusedColor" Color="White"/>
      <Color Name="LabelHoverColor" Color="DimGray"/>
      <Color Name="LabelPressedColor" Color="Black"/>

    </Properties>

    <Locals>
      <!-- React to "click" input. -->
      <ClickHandler Name="Clicker"/>

    </Locals>

    <Rules>

      <!-- The command description is displayed by the text box. A  -->
      <!-- binding is used in case the description changes at       -->
      <!-- runtime.                                                 -->
      <Binding Source="[Command.Description]" Target="[Label.Content]"/>

      <Binding Source="[Command]" Target="[Clicker.Command]"/>
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <!-- Change color on click. -->
      <Condition Source="[Clicker.Clicking]" SourceValue="true">
        <Actions>
          <Set Target="[Background.Content]" Value="[BackgroundPressedColor]"/>
          <Set Target="[Label.Color]" Value="[LabelPressedColor]"/>
        </Actions>
      </Condition>

      <!-- Change color on mouse focus. -->
      <Condition Source="[Input.MouseFocus]" SourceValue="true">
        <Actions>
          <Set Target="[Background.Content]" Value="[BackgroundHoverColor]"/>
          <Set Target="[Label.Color]" Value="[LabelHoverColor]"/>
        </Actions>
      </Condition>

      <!-- Change color on key focus. -->
      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <Set Target="[Background.Content]" Value="[BackgroundFocusedColor]"/>
          <Set Target="[Label.Color]" Value="[LabelFocusedColor]"/>
        </Actions>
      </Condition>

    </Rules>

    <Content>
      <!-- Solid background color. -->
      <ColorFill Name="Background" Content="[BackgroundColor]" Padding="5,5,5,5">
        <Children>
          <Text Name="Label" Content="Play Movie" Font="font://s:Heading" Color="color://s:HeadingColor" />
        </Children>
      </ColorFill>
    </Content>

  </UI>

  <UI Name="SynopsisPanel" >
    <Properties>
      <cor:String Name="Synopsis" String="$Required"/>
      <Font Name="Normal" FontName="Verdana" FontSize="16"/>
    </Properties>
    
    <Locals>
      <ScrollingHandler Name="ScrollingHandler" HandleDirectionalKeys="true" HandlePageCommands="true" HandlePageKeys="true" HandlerStage="Direct"/>
      <ScrollingData Name="ScrollingData" />

    </Locals>

    <Rules>
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <Set Target="[Summary.Color]" Value="color://s:FocusColor"/>
        </Actions>
      </Condition>

    </Rules>
    
    <Content>
      <Panel Name="SummaryPanel">
        <LayoutInput>
          <FormLayoutInput Left="Image,1.02" Top="Runtime,0.95" Right="Parent,0.95" />
        </LayoutInput>
        <Children>
          <!-- Scroller's parent which displays background color. It offsets -->
          <!-- the Scroller using padding and the Scroller fades the clipped -->
          <!-- text outside itself (negative fade size).                     -->
          <!-- This piece of the UI is MouseInteractive.                     -->
          <ColorFill Name="Background" Content="Transparent"  MouseInteractive="true" Padding="0,0,0,20" MaximumSize="0,200">
            <!--Padding="30,30,30,30"  Margins="30,0,30,0">-->
            <Children>

              <!-- The Scroller. It referrs to the ScrollingData too. -->
              <Scroller Name="Scroll" Orientation="Vertical" FadeSize="5" ScrollingData="[ScrollingData]" >
                <Children>
                  <!-- Text to scroll. Filled with rich text (RTF) content. -->
                  <!-- You can use Wordpad to generate RTF content.         -->
                  <Text Name="Summary" WordWrap="true" Font="font://s:Normal" Color="color://s:NormalColor" Content="[Synopsis]" >
                    <!-- Smooth scrolling. -->
                    <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" Value="0,0,0" RelativeTo="Current"
                                    Interpolation="Exp"/>
                          <PositionKeyframe Time=".1" Value="0,0,0"/>
                        </Keyframes>
                      </Animation>
                    </Animations>
                  </Text>
                </Children>
              </Scroller>
            </Children>
          </ColorFill>
        </Children>
      </Panel>



    </Content>
  </UI>

  <UI Name="ActorsPanel">
    <Properties>
      <coll:IList Name="ActorList" IList="$Required" />
    </Properties>
    
    <Locals>
      <ScrollingHandler Name="ScrollingHandler" HandleDirectionalKeys="true"/>
      <!-- ScrollingData contains many ways to customize how scrolling -->
      <!-- should behave. It has methods to change the current scroll  -->
      <!-- position and it also reports the position. In this case,    -->
      <!-- the default values are used for the sample.                 -->
      <ScrollingData Name="ScrollingData"/>
    </Locals>

    <Rules>
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <!--<Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          --><!--<Set Target="[RepeatedItem!]" Value="White"/>--><!--
        </Actions>
      </Condition>-->
    </Rules>
    
    <Content>
          <Panel Layout="VerticalFlow">
            <Children>
              <Text Name="Actors" Content="Actors" Font ="font://s:LabelFont" Color="color://s:LabelColor" />

              <Repeater Source="[ActorList]" Layout="VerticalFlow" MaximumSize="200,200">
                <Content>
                  <Text Content="[RepeatedItem!cor:String]" WordWrap="true" Font="font://s:Normal" Color="color://s:NormalColor" />
                </Content>
              </Repeater>
            </Children>
          </Panel>
    </Content>
  </UI>


</Mcml>