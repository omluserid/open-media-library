<Mcml xmlns="http://schemas.microsoft.com/2006/mcml"
	  xmlns:a="assembly://Library/Library"
	  xmlns:s="resx://Library/Library.Resources/Styles"
	  xmlns:cor="assembly://MSCorLib/System"
      xmlns:col="assembly://MSCorLib/System.Collections"
      xmlns:c="resx://Library/Library.Resources/Controls"
	  xmlns:me="Me">

  <Aggregate Source="resx://Library/Library.Resources/Base" />

  <UI Name="ListView">
    <Properties>
      <a:MovieGallery Name="MovieBrowser" MovieGallery="$Required"/>
      <a:UISettings Name="UISettings" UISettings="$Required" />
      <ScrollingData Name="ScrollingData" ScrollingData="$Required"/>
      <col:IList Name="List" IList="$Required"/>
      <EditableText Name="JumpValue"/>
      <cor:Boolean Name="ShowDescription" Boolean="true" />
      <!-- An object to track which item in the list currently has focus -->
      <IntRangedValue Name="FocusedIndex"/>

    </Properties>

    <Locals>      
      <!-- Create an input handler for scrolling. -->
      <ScrollingHandler Name="ScrollingHandler" HandlerStage="Bubbled" />
      <TypingHandler Name="TypingHandler" EditableText="[MovieBrowser.JumpInListText]" TypingPolicy="TripleTap" HandlerStage="Bubbled"/>
      <Timer Name="ClearTimer" AutoRepeat="false" Interval="5000" Enabled="false"/>
    </Locals>

    <Rules>
      <Default Target="[Input.KeyInteractive]" Value="true" />
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]" />
      <Default Target="[ScrollingData.Repeater]" Value="[GalleryRepeater]" />

      <Binding Source="[ShowDescription]" Target="[DescriptionBar.Visible]" />

      <Changed Source="[ScrollingData.TotalPages]">
        <Actions>
          <Set Target="[MovieBrowser.NumberOfPages]" Value="[ScrollingData.TotalPages!cor:Int32]" />
        </Actions>
      </Changed>

      <!-- don't lock the scroll if we only have 1 or less pages -->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[ScrollingData.TotalPages]" Value="1" ConditionOp="LessThanOrEquals" />
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.LockedPosition]" Value="-1" />
        </Actions>
      </Rule>

      <!-- if there are more than 1 pages - lock the scroll in the middle -->
      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[ScrollingData.TotalPages]" Value="1" ConditionOp="GreaterThan" />
        </Conditions>
        <Actions>
          <Set Target="[ScrollingData.LockedPosition]" Value=".5" />
        </Actions>
      </Rule>    

      <Rule>
        <Conditions>
          <Modified Source="[TypingHandler.DisplayValue]"/>
        </Conditions>
        <Actions>
          <Set Target="[JumpValue.Value]" Value="[TypingHandler.DisplayValue]"/>
          <Invoke Target="[MovieBrowser.JumpToMovie]" jumpString="[TypingHandler.DisplayValue]" list="[List]"/>
          <Invoke Target="[ClearTimer.Start]" />
        </Actions>
      </Rule>

      <Changed Source="[MovieBrowser.JumpLetter]" >
        <Actions>
          <Set Target="[JumpValue.Value]" Value="[MovieBrowser.JumpLetter]"/>
          <Invoke Target="[MovieBrowser.JumpToMovie]" jumpString="[MovieBrowser.JumpLetter]" list="[List]"/>
          <Invoke Target="[ClearTimer.Start]" />
        </Actions>
      </Changed>

      <Changed Source="[ClearTimer.Tick]">
        <Actions>
          <Set Target="[MovieBrowser.JumpInListText.Value]" Value="" />
          <Set Target="[JumpValue.Value]" Value="" />
        </Actions>
      </Changed>

      <Changed Source="[MovieBrowser.JumpToPosition]" >
        <Actions>
          <!--Scroll parameter is the number of items to scroll to, relative to the current position-->
          <Invoke Target ="[ScrollingData.Scroll]" amount="[MovieBrowser.RelativeJumpToPosition]" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <!--This is the absolute index-->
          <Invoke Target ="[GalleryRepeater.NavigateIntoIndex]" index="[MovieBrowser.JumpToPosition]" InvokePolicy="Synchronous"/>
          <Invoke Target="[ClearTimer.Start]" />
        </Actions>
      </Changed>

      <!-- change the color and scale if selected -->
      <Rule ConditionLogicalOp="Or">
        <Conditions>
          <Equality Source="[Input.DeepMouseFocus]" Value="true"/>
          <Equality Source="[Input.DeepKeyFocus]" Value="true"/>
        </Conditions>
        <Actions>
          <PlayAnimation Animation="animation://me:SectionGraphicFocusOn" Target="[GalleryContainer]" />
        </Actions>
      </Rule>

      <Rule ConditionLogicalOp="And">
        <Conditions>
          <Equality Source="[Input.DeepMouseFocus]" Value="false"/>
          <Equality Source="[Input.DeepKeyFocus]" Value="false"/>
        </Conditions>
        <Actions>
          <PlayAnimation Animation="animation://me:SectionGraphicFocusOff" Target="[GalleryContainer]" />
        </Actions>
      </Rule>
      <!-- end change color and scale -->

    </Rules>

    <Content>
      <Panel Name="GalleryContainer" Layout="VerticalFlow"  MouseInteractive="true">

        <Children>
          <Panel MaximumSize="0,450" Layout="Center">
            <Children>
              <!-- Put in a scroller so that if we repeat, the row will scroll. -->
              <Scroller Name="GalleryScroller"
                        Orientation="Horizontal"
                        ScrollingData="[ScrollingData]">
                <Children>

                  <!-- Hook up our list to the repeater.  -->
                  <Repeater Name="GalleryRepeater"
                            Navigation="FlowVertical,RememberFocus,PreferFocusOrder"
                            Source="[List]"
                            DiscardOffscreenVisuals="true">
                    <Layout>
                      <GridLayout Repeat="WhenTooBig"
                                  Rows="[UISettings.Gallery.ListRows]"
                                  Orientation="Vertical"
                                  AllowWrap="true"
                                  ReferenceSize="[UISettings.Gallery.ListItemSize]"
                                  Spacing="[UISettings.Gallery.ListSpacing]"
                                  MajorAlignment="Fill"
                                  MinorAlignment="Fill"
                                  RepeatGap="100"/>
                    </Layout>
                    <Animations>
                      <Animation Animation="animation://s:MoveAnimation"/>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" RelativeTo="Current" />
                          <PositionKeyframe Time=".3" RelativeTo="Final" Value=".8,.8,.8" />
                          <PositionKeyframe Time=".4" RelativeTo="Final" />
                        </Keyframes>
                      </Animation>
                    </Animations>
                    <Content>

                      <!-- For each item, repeat our RepeatedItem UI, passing in-->
                      <!-- the index of the item and the image.                 -->
                      <me:RepeatedItem  Index="[RepeatedItemIndex]"
                                        FocusedIndex="[FocusedIndex]"
                                        GalleryItem="[RepeatedItem!a:GalleryItem]"
                                        MovieBrowser="[MovieBrowser]"
                                        UISettings="[UISettings]" />
                    </Content>
                  </Repeater>

                </Children>
              </Scroller>
            </Children>
          </Panel>

          <c:MovieDescription Name="DescriptionBar" MovieBrowser="[MovieBrowser]" UISettings="[UISettings]" FocusedIndex="[FocusedIndex]" ShowCoverThumbnail="true" />
        </Children>
      </Panel>
    </Content>

  </UI>

  <!-- The RepeatedItem UI is what gets repeated for each image in our list -->
  <!-- from the ScrollingSample UI.  It displays the image itself, the      -->
  <!-- item's index and "Real" indexes, and a background color fill that    -->
  <!-- changes color when it receives key focus.                            -->
  <UI Name="RepeatedItem">
    <Properties>
      <a:GalleryItem Name="GalleryItem" GalleryItem="$Required"/>
      <a:MovieGallery Name="MovieBrowser" MovieGallery="$Required"/>
      <!-- Update these 2 values everytime we get the focus -->
      <IntRangedValue Name="FocusedIndex" IntRangedValue="$Required"/>
      <a:UISettings Name="UISettings" UISettings="$Required" />      

      <!-- The index passed down from the repeater.-->
      <Index Name="Index" Index="$Required"/>
      
    </Properties>

    <Locals>
      <ClickHandler Name="Clicker" Command="[GalleryItem]" />
      <ShortcutHandler Name="PlayPauseButton" Command="[GalleryItem.QuickPlay]" Shortcut="PlayPause" Handle="true" HandlerStage="Direct"  />
      <ShortcutHandler Name="PlayButton" Command="[GalleryItem.QuickPlay]" Shortcut="Play"   Handle="true" HandlerStage="Direct" />
      <cor:Int32 Name="CurrentIndex" />           
      
      <!-- This animation will scale the image. -->
      <Animation Name="LostFocusList" Loop="0">
        <Keyframes>
          <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" RelativeTo="Current" />
          <ScaleKeyframe Time="0.1" Value="1,1,1" RelativeTo="Final" />
        </Keyframes>
      </Animation>

      <Animation Name="GotFocusList" Loop="0" CenterPointPercent=".1,.1,0" >
        <Keyframes>
          <ScaleKeyframe Time="0.0" Value="1,1,1" Interpolation="SCurve" />
          <ScaleKeyframe Time="0.2" Value="[UISettings.Gallery.FocusListScale]" RelativeTo="Final" />
        </Keyframes>
      </Animation>

    </Locals>

    <Rules>      
      <Default Target="[Input.KeyInteractive]" Value="true"/>

      <Default Target="[Input.MakeTopmostOnFocus]" Value="true"/>

      <!-- If we get key focus, change our background color to indicate it. -->
      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Actions>
          <PlayAnimation Target="[ItemPanel]" Animation="[GotFocusList]" />
          <Set Target="[Caption.Color]" Value="color://s:FocusColor" />
          <Set Target="[FocusedIndex.Value]" Value="[Index.SourceValue]"/>
          <Set Target="[MovieBrowser.FocusedItem]" Value="[GalleryItem]" />
          <!-- Play an animation on the cover target item. -->
          <PlaySound Sound="sound://me:Focus" />
        </Actions>
      </Condition>

      <!-- when we loose focus -->
      <Condition Source="[Input.KeyFocus]" SourceValue="false">
        <Actions>
          <!-- Play an animation on the cover target item. -->
          <PlayAnimation Target="[ItemPanel]" Animation="[LostFocusList]"/>
          <Set Target="[Caption.Color]" Value="color://s:Text.SectionActive" />
        </Actions>
      </Condition>
    </Rules>

    <Content>
      <Panel Name="ItemPanel" Layout="Anchor" Scale="1.0,1.0,1.0" CenterPointPercent="0.5,0.75,0.0">
        <Children>
          <Panel Name="ImagePanel" Margins="0,0,0,0">
            <Children>
              <Text Name="Caption" Content="[GalleryItem.Caption]" Font="font://s:ListFont" Color="color://s:Text.SectionActive" Margins="20,10,20,10" />              
            </Children>
          </Panel>          
        </Children>
        <Animations>          
          <Animation Type="ContentChangeShow">
            <Keyframes>
              <AlphaKeyframe Time="0" Value="0" RelativeTo="Absolute" />
              <AlphaKeyframe Time=".3" RelativeTo="Final" />
            </Keyframes>
          </Animation>
        </Animations>
      </Panel>
    </Content>
  </UI>

</Mcml>
